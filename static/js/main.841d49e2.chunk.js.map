{"version":3,"sources":["Axios.js","Login.js","Profile.js","Navbar.js","Menu.js","service.js","ChatRoom.js","RoomList.js","GameRoom.js","GameBoard.js","Game.js","HomeButton.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Register","setUserID","setUsername","name","email","password","rePassword","register","e","a","preventDefault","canRegister","length","alert","validator","isEmail","post","then","res","data","_id","sessionStorage","setItem","Button","variant","onClick","LoginWithEmail","loginWithEmail","LogoutButton","logout","clear","error","size","LoginForm","React","useState","mode","setMode","setName","setEmail","setPassword","setRePassword","useEffect","className","type","placeholder","value","onChange","target","href","oldMode","LoginButton","show","setShow","Modal","onHide","Header","closeButton","Title","Body","ChangePasswordConfirm","userID","newPassword","reNewPassword","changePassword","canUpdate","ok","ChangePasswordButton","setNewPassword","setReNewPassword","Footer","ProfileButton","username","TopNavbar","Navbar","bg","Brand","Nav","Text","Link","Match","loading","setLoading","Spinner","animation","role","CustomRoom","Demo","Menu","ws","io","SendChat","props","state","roomid","playerid","userid","history","handleChange","bind","handleSubmit","event","checked","this","setState","obj","message","emit","fetch","URLSearchParams","json","on","his","push","chatlist","i","onSubmit","Component","Roomline","roomname","numofusers","handleadd","RoomList","room_list","input_room_name","handleCreateRoom","handleEnterRoom","handleRank","display","match","findIndex","element","isMatch","splice","console","log","setGameroomenter","setGameroomid","user_id","user_name","displaylist","map","room","Playerline","str","isready","playername","handleready","position","ready_num","startGame","Gameroom","player_list","player_id","player_num","ready_state","addready","minusready","handleLeaveRoom","players","players_ids","num","t","ready","temp","array","save","list","pressed","start","GameBoard","board","entityStates","entrance","empty","player","setPlayerPosition","setBoard","boardHeight","boardWidth","areaHeight","areaWidth","playerPosition","j","tempArray_1","tempArray_2","y","tempArray_3","x","px","py","Math","floor","nextProps","prevPlayerPos","nx","ny","boardRow","area","fontColour","backgroundColour","style","textAlign","verticalAlign","backgroundColor","color","cellSpacing","id","border","width","height","areaRow","cell","Game","win","showGameBoard","randomEntrances","randomPositions","totalMoves","initializeBoardPlayer","setEntrances","countTotalMoves","handleKeyUp","handleKeyDown","handleKeyRight","handleKeyLeft","makeMove","randomValues","entranceDifferences","targetWidth","random","targetHeight","Number","newX","newY","prevPos","ax","ay","tx","ty","status","keyEventName","KEYDOWN","keyValue","onKeyHandle","HomeButton","App","getItem","gameRoomEnter","setGameRoomEnter","gameRoomID","setGameRoomID","Container","fluid","Row","Col","GameRoom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAOeA,E,OALEC,EAAMC,OAAO,CAC7BC,QAAS,0B,wBCEV,SAASC,EAAT,GAAkF,IAA9DC,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC5DC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDAChBD,EAAEE,iBACEC,GAAc,EACF,GAAbR,EAAKS,OAHQ,gBAIfC,MAAM,kBAJS,0BAKO,GAAdT,EAAMQ,OALC,iBAMfC,MAAM,mBANS,2BAOmB,GAA1BC,IAAUC,QAAQX,GAPX,iBAQfS,MAAM,yBARS,2BASU,GAAjBR,EAASO,OATF,iBAUfC,MAAM,sBAVS,6BAWPR,EAASO,OAAO,GAXT,iBAYfC,MAAM,+CAZS,2BAaPR,GAAUC,EAbH,iBAcfO,MAAM,oDAdS,mDAgBThB,EAAMmB,KAAK,gBAAiB,CACjCZ,MAAOA,IACLa,MAAK,SAAAC,GACa,GAAjBA,EAAIC,KAAKP,OACXD,GAAc,EAEdE,MAAM,+FAtBO,YAyBZF,EAzBY,kCA0BRd,EAAMmB,KAAK,iBAAkB,CAClCb,KAAMA,EACNC,MAAOA,EACPC,SAAUA,IACRY,MAAK,SAAAC,GACPjB,EAAUiB,EAAIC,KAAKC,KACnBlB,EAAYgB,EAAIC,KAAKhB,MACrBkB,eAAeC,QAAQ,SAAUJ,EAAIC,KAAKC,KAC1CC,eAAeC,QAAQ,WAAYJ,EAAIC,KAAKhB,MAC5CU,MAAM,4BAnCO,2DAuCfA,MAAM,kBAvCS,2DAAH,sDA0Cd,OAAO,cAACU,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASlB,EAArC,sBAGR,SAASmB,EAAT,GAAqE,IAA3CzB,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,YAAaE,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAClDsB,EAAc,uCAAG,WAAOnB,GAAP,SAAAC,EAAA,6DACtBD,EAAEE,iBADoB,kBAGfb,EAAMmB,KAAK,gBAAiB,CACjCZ,MAAOA,EACPC,SAAUA,IACRY,MAAK,SAAAC,GACa,GAAjBA,EAAIC,KAAKP,OACXC,MAAM,8BAENZ,EAAUiB,EAAIC,KAAK,GAAGC,KACtBlB,EAAYgB,EAAIC,KAAK,GAAGhB,MACxBkB,eAAeC,QAAQ,SAAUJ,EAAIC,KAAK,GAAGC,KAC7CC,eAAeC,QAAQ,WAAYJ,EAAIC,KAAK,GAAGhB,MAC/CU,MAAM,0BAda,sDAkBrBA,MAAM,kBAlBe,wDAAH,sDAqBpB,OAAO,cAACU,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASE,EAArC,mBAGR,SAASC,EAAT,GAAmD,IAA3B3B,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YAC5B2B,EAAM,uCAAG,sBAAApB,EAAA,sDACd,IACCR,EAAU,MACVC,EAAY,MACZmB,eAAeS,QACfjB,MAAM,uBACL,MAAOkB,GACRlB,MAAM,qBAPO,2CAAH,qDAUZ,OAAO,cAACU,EAAA,EAAD,CAAQS,KAAK,KAAKR,QAAQ,YAAYC,QAASI,EAA/C,qBAGR,SAASI,EAAT,GAAgD,IAA3BhC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YAAe,EACrBgC,IAAMC,SAAS,SADM,mBACvCC,EADuC,KACjCC,EADiC,OAMtBH,IAAMC,SAAS,IANO,mBAMvChC,EANuC,KAMjCmC,EANiC,OAOpBJ,IAAMC,SAAS,IAPK,mBAOvC/B,EAPuC,KAOhCmC,EAPgC,OAQdL,IAAMC,SAAS,IARD,mBAQvC9B,EARuC,KAQ7BmC,EAR6B,OASVN,IAAMC,SAAS,IATL,mBASvC7B,EATuC,KAS3BmC,EAT2B,KAkB9C,OAPAP,IAAMQ,WAAU,WACfJ,EAAQ,IACRC,EAAS,IACTC,EAAY,IACZC,EAAc,MACZ,CAACL,IAGH,sBAAKO,UAAU,aAAf,UACW,aAATP,EACD,uBACCQ,KAAO,OACPC,YAAc,OACdC,MAAS3C,EACT4C,SAAY,SAACvC,GAAD,OAAO8B,EAAQ9B,EAAEwC,OAAOF,QACpCH,UAAU,eAEV,6BACD,uBACCC,KAAO,QACPC,YAAc,QACdC,MAAS1C,EACT2C,SAAY,SAACvC,GAAD,OAAO+B,EAAS/B,EAAEwC,OAAOF,QACrCH,UAAU,eAEX,uBACCC,KAAO,WACPC,YAAc,WACdC,MAASzC,EACT0C,SAAY,SAACvC,GAAD,OAAOgC,EAAYhC,EAAEwC,OAAOF,QACxCH,UAAU,eAED,aAATP,EACD,uBACCQ,KAAO,WACPC,YAAc,oBACdC,MAASxC,EACTyC,SAAY,SAACvC,GAAD,OAAOiC,EAAcjC,EAAEwC,OAAOF,QAC1CH,UAAU,eAEV,6BACS,UAATP,EACA,cAACV,EAAD,CACCzB,UAAWA,EACXC,YAAaA,EACbE,MAAOA,EACPC,SAAUA,IAGX,cAACL,EAAD,CACCC,UAAWA,EACXC,YAAaA,EACbC,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,WAAYA,IAGd,gCACC,iDACA,mBAAG2C,KAAK,IAAIxB,QAAS,WApEvBY,GAAQ,SAACa,GAAD,MAA0B,UAAZA,EAAsB,WAAa,YAoEvD,SACW,UAATd,EAAmB,yBAA2B,sBAOpD,SAASe,EAAT,GAAkD,IAA3BlD,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YAAe,EACxBgC,IAAMC,UAAS,GADS,mBACzCiB,EADyC,KACnCC,EADmC,KAMhD,OACC,gCACC,cAAC9B,EAAA,EAAD,CAAQS,KAAK,KAAKR,QAAQ,YAAYC,QAJrB,kBAAM4B,GAAQ,IAI/B,mBAGA,eAACC,EAAA,EAAD,CAAOF,KAAMA,EAAMG,OARD,kBAAMF,GAAQ,IAQhC,UACC,cAACC,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACC,cAACH,EAAA,EAAMI,MAAP,yBAED,cAACJ,EAAA,EAAMK,KAAP,UACC,cAAC1B,EAAD,CAAWhC,UAAWA,EAAWC,YAAaA,YC7JnD,SAAS0D,EAAT,GAA2F,IAA1DC,EAAyD,EAAzDA,OAAQxD,EAAiD,EAAjDA,SAAUyD,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,cAAeV,EAAW,EAAXA,QACxEW,EAAc,uCAAG,WAAOxD,GAAP,eAAAC,EAAA,6DAClBwD,GAAY,EAChBzD,EAAEE,iBAFoB,kBAIfb,EAAMmB,KAAK,gBAAiB,CACjCI,IAAKyC,EACLxD,SAAUA,IACRY,MAAK,SAAAC,GACa,GAAjBA,EAAIC,KAAKP,OACXC,MAAM,qBACsB,GAApBiD,EAAYlD,OACpBC,MAAM,0BACEiD,EAAYlD,OAAO,EAC3BC,MAAM,mDACEiD,GAAaC,EACrBlD,MAAM,wDAENoD,GAAY,KAjBO,WAoBlBA,EApBkB,gCAqBdpE,EAAMmB,KAAK,iBAAkB,CAClCI,IAAKyC,EACLxD,SAAUyD,IACR7C,MAAK,SAAAC,GACS,GAAbA,EAAIC,KAAK+C,IACXrD,MAAM,uBAEPwC,GAAQ,MA5BW,yDAgCrBxC,MAAM,kBAhCe,0DAAH,sDAmCpB,OAAO,cAACU,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASuC,EAAnC,qBAGR,SAASG,EAAT,GAA2C,IAAXN,EAAU,EAAVA,OAAU,EACjB3B,IAAMC,UAAS,GADE,mBAClCiB,EADkC,KAC5BC,EAD4B,OAETnB,IAAMC,SAAS,IAFN,mBAElC9B,EAFkC,KAExBmC,EAFwB,OAGHN,IAAMC,SAAS,IAHZ,mBAGlC2B,EAHkC,KAGrBM,EAHqB,OAIClC,IAAMC,SAAS,IAJhB,mBAIlC4B,EAJkC,KAInBM,EAJmB,KAezC,OANAnC,IAAMQ,WAAU,WACfF,EAAY,IACZ4B,EAAe,IACfC,EAAiB,MACf,CAACjB,IAGH,gCACC,cAAC7B,EAAA,EAAD,CAAQS,KAAK,KAAKR,QAAQ,YAAYC,QAVrB,kBAAM4B,GAAQ,IAU/B,6BAGA,eAACC,EAAA,EAAD,CAAOF,KAAMA,EAAMG,OAdD,kBAAMF,GAAQ,IAchC,UACC,cAACC,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACC,cAACH,EAAA,EAAMI,MAAP,gCAED,cAACJ,EAAA,EAAMK,KAAP,UACC,iCACC,8BACC,uBACCf,KAAO,WACPE,MAASzC,EACTwC,YAAc,mBACdE,SAAY,SAACvC,GAAD,OAAOgC,EAAYhC,EAAEwC,OAAOF,QACxCH,UAAY,iBAGd,8BACC,uBACCC,KAAO,WACPE,MAASgB,EACTjB,YAAc,eACdE,SAAY,SAACvC,GAAD,OAAO4D,EAAe5D,EAAEwC,OAAOF,QAC3CH,UAAY,iBAGd,8BACC,uBACCC,KAAO,WACPE,MAASiB,EACTlB,YAAc,wBACdE,SAAY,SAACvC,GAAD,OAAO6D,EAAiB7D,EAAEwC,OAAOF,QAC7CH,UAAU,sBAKd,cAACW,EAAA,EAAMgB,OAAP,UACC,cAACV,EAAD,CAAuBC,OAAQA,EAAQxD,SAAUA,EAAUyD,YAAaA,EAAaC,cAAeA,EAAeV,QAASA,YAOjI,SAASkB,EAAT,GAA2D,IAAlCV,EAAiC,EAAjCA,OAAQW,EAAyB,EAAzBA,SAAyB,KAAftE,YAClBgC,IAAMC,UAAS,IADkB,mBAClDiB,EADkD,KAC5CC,EAD4C,KAMzD,OACC,gCACC,cAAC9B,EAAA,EAAD,CAAQS,KAAK,KAAKR,QAAQ,YAAYC,QAJrB,kBAAM4B,GAAQ,IAI/B,qBAGA,eAACC,EAAA,EAAD,CAAOF,KAAMA,EAAMG,OARD,kBAAMF,GAAQ,IAQhC,UACC,cAACC,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACC,cAACH,EAAA,EAAMI,MAAP,+BAED,eAACJ,EAAA,EAAMK,KAAP,WACC,yCAAYa,KACZ,4CACA,mDAED,eAAClB,EAAA,EAAMgB,OAAP,WACC,cAACH,EAAD,CAAsBN,OAAQA,IAC9B,cAACtC,EAAA,EAAD,CAAQC,QAAQ,UAAhB,mCCpJL,SAASiD,EAAT,GAAkE,IAA7CZ,EAA4C,EAA5CA,OAAQW,EAAoC,EAApCA,SAAUvE,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YACjD,OACA,8BACC,eAACwE,EAAA,EAAD,CAAQ/B,UAAU,OAAOgC,GAAG,OAAOnD,QAAQ,OAA3C,UACC,cAACkD,EAAA,EAAOE,MAAR,CAAc3B,KAAK,uDAAnB,wBACA,cAAC4B,EAAA,EAAD,UACC,cAACH,EAAA,EAAOI,KAAR,mEAED,cAACD,EAAA,EAAD,CAAKlC,UAAU,YACL,OAATkB,EACA,cAACgB,EAAA,EAAIE,KAAL,CAAU9B,KAAK,QAAf,SAAuB,cAACE,EAAD,CAAalD,UAAWA,EAAWC,YAAaA,MAEvE,qCACC,eAACwE,EAAA,EAAOE,MAAR,sBAAuBJ,KACvB,cAACK,EAAA,EAAIE,KAAL,CAAU9B,KAAK,QAAf,SAAuB,cAACsB,EAAD,CAAeV,OAAQA,EAAQW,SAAUA,EAAUtE,YAAaA,MACvF,cAAC2E,EAAA,EAAIE,KAAL,CAAU9B,KAAK,QAAf,SAAuB,cAACrB,EAAD,CAAc3B,UAAWA,EAAWC,YAAaA,c,aChB7E,SAAS8E,IAAS,IAAD,EACc7C,oBAAS,GADvB,mBACT8C,EADS,KACAC,EADA,KAKhB,OAAO,yBAAQvC,UAAU,aAAalB,QAHrB,WAChByD,GAAYD,IAEN,sBAA4DA,EAAQ,cAACE,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,WAAY,gCAGzH,SAASC,EAAT,GAAkC,IAAZjD,EAAW,EAAXA,QAIrB,OAAO,wBAAQM,UAAU,aAAalB,QAHnB,WAClBY,EAAQ,gBAEF,yBAGR,SAASkD,EAAT,GAA4B,IAAZlD,EAAW,EAAXA,QAIf,OAAO,wBAAQM,UAAU,aAAalB,QAHzB,WACZY,EAAQ,SAEF,kBAoBOmD,MAjBf,YAA4B,IAAZnD,EAAW,EAAXA,QACf,OACC,sBAAKM,UAAU,OAAf,UACC,sCACA,8BACC,cAACqC,EAAD,MAED,8BACC,cAACM,EAAD,CAAYjD,QAASA,MAEtB,8BACC,cAACkD,EAAD,CAAMlD,QAASA,U,wDClCJoD,E,MADJC,GAAG,yBCkEGC,E,kDA/Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,OAAO,EAAKF,MAAME,OAAQC,SAAS,EAAKH,MAAMI,OAAQ7F,KAAK,EAAKyF,MAAMzF,KAAM2C,MAAO,GAAImD,QAAS,IAC9G,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,E,gDAOnB,SAAaE,GACT,IAAMrD,EAASqD,EAAMrD,OACfF,EAAwB,aAAhBE,EAAOJ,KAAsBI,EAAOsD,QAAUtD,EAAOF,MAC7D3C,EAAO6C,EAAO7C,KAEpBoG,KAAKC,SAAL,eACKrG,EAAO2C,M,0BAIhB,SAAauD,GACT,IAAII,EAAM,CAACX,OAAOS,KAAKV,MAAMC,OAAQE,OAAOO,KAAKV,MAAME,SAAU5F,KAAMoG,KAAKV,MAAM1F,KAAMuG,QAASH,KAAKV,MAAM/C,OAC5G2C,EAAGkB,KAAK,WAAWF,GACnBF,KAAKC,SAAS,CAAC1D,MAAO,KACtBuD,EAAM3F,mB,+BAGV,WAAoB,IAAD,OACfkG,MAAM,aAAa,IAAIC,gBAAgB,CAACf,OAAOS,KAAKX,MAAME,UACrD7E,MAAK,SAAAC,GAAG,OAAEA,EAAI4F,UACd7F,MAAK,SAAAC,GACF,EAAKsF,SAAS,CAACP,QAAQ/E,OAI/BuE,EAAGsB,GAAG,WAAW,SAAAL,GAEb,IAAIM,EAAM,EAAKnB,MAAMI,QACrBe,EAAIC,KAAKP,GACT,EAAKF,SAAS,CAACP,QAAQe,S,oBAI/B,WAII,IAFA,IAAIf,EAAUM,KAAKV,MAAMI,QACrBiB,EAAW,GACNC,EAAE,EAAEA,EAAElB,EAAQrF,OAAOuG,IAAI,CAC9B,IAAIhH,EAAO8F,EAAQkB,GAAGhH,KAClBuG,EAAUT,EAAQkB,GAAGT,QACzBQ,EAASD,KAAK,gCAAM9G,EAAN,KAAcuG,MAElC,OACI,gCACI,2CACCQ,EACH,uBAAME,SAAUb,KAAKH,aAArB,UACI,+CAAyB,uBACzB,0BAAUjG,KAAK,QAAQyC,KAAK,OAAOE,MAAOyD,KAAKV,MAAM/C,MAAOD,YAAY,iBAAiBE,SAAUwD,KAAKL,eACxG,uBAAOtD,KAAK,SAASE,MAAM,qB,GAzDpBZ,IAAMmF,WCAvBC,E,4JACF,WAEI,OAAQ,+BACI,6BACKf,KAAKX,MAAM2B,WAEhB,+BACKhB,KAAKX,MAAM4B,WADhB,QAII,6BACI,wBAAQ/F,QAAS8E,KAAKX,MAAM6B,UAA5B,0B,GAZLJ,aA2IRK,E,kDAtHX,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAC8B,UAAU,GAAIC,gBAAgB,GAAI3C,SAAQ,GACxD,EAAKiB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK0B,iBAAmB,EAAKA,iBAAiB1B,KAAtB,gBACxB,EAAK2B,gBAAkB,EAAKA,gBAAgB3B,KAArB,gBACvB,EAAK4B,WAAa,EAAKA,WAAW5B,KAAhB,gBANH,E,qDASnB,WAAoB,IAAD,OACfS,MAAM,SACD3F,MAAK,SAAAC,GAAG,OAAEA,EAAI4F,UACd7F,MAAK,SAAAC,GAAG,OAAE,EAAKsF,SAAS,CAACmB,UAAUzG,OACxCuE,EAAGsB,GAAG,cAAc,SAAA5F,GAEhB,IAAI6G,EAAU,EAAKnC,MAAM8B,UACzBK,EAAQf,KAAK9F,GAEb,EAAKqF,SAAS,CAACmB,UAAUK,OAE7BvC,EAAGsB,GAAG,eAAe,SAAA5F,GACjB,IAAI6G,EAAU,EAAKnC,MAAM8B,UAErBM,EAAQD,EAAQE,WADJ,SAACC,GAAD,OAAaA,EAAQ/G,MAAQD,EAAKC,QAErC,IAAT6G,IACAD,EAAQC,GAAOT,YAAc,GACjC,EAAKhB,SAAS,CAACmB,UAAUK,OAE7BvC,EAAGsB,GAAG,gBAAgB,SAAA5F,GAClB,IAAI6G,EAAU,EAAKnC,MAAM8B,UAErBM,EAAQD,EAAQE,WADJ,SAACC,GAAD,OAAaA,EAAQ/G,MAAQD,EAAKC,QAErC,IAAT6G,IACAD,EAAQC,GAAOT,YAAc,GACjC,EAAKhB,SAAS,CAACmB,UAAUK,OAE7BvC,EAAGsB,GAAG,cAAc,SAAA5F,GAChB,IAAI6G,EAAU,EAAKnC,MAAM8B,UACnBS,EAAU,SAACD,GAAD,OAAaA,EAAQ/G,MAAQD,EAAKC,MAErC,IADD4G,EAAQE,UAAUE,IAE1BJ,EAAQK,OAAOL,EAAQE,UAAUE,GAAS,GAC9C,EAAK5B,SAAS,CAACmB,UAAUK,OAG7BvC,EAAGsB,GAAG,eAAc,SAAC5F,GACjBmH,QAAQC,IAAI,MACZ,EAAK/B,SAAS,CAACvB,SAAS,IACxB,EAAKW,MAAM4C,iBAAiBrH,EAAKoG,UACjC,EAAK3B,MAAM6C,cAActH,EAAK2E,WAGlCL,EAAGsB,GAAG,YAAW,SAAC5F,GACdN,MAAM,0BAA4BM,EAAKoG,e,wBAI/C,WACIhB,KAAKC,SAAS,CAACvB,SAAS,IACxBQ,EAAGkB,KAAK,UAAU,CAACX,OAAQO,KAAKX,MAAM8C,QAASvI,KAAMoG,KAAKX,MAAM+C,c,0BAGpE,SAAatC,GACT,IAAMrD,EAASqD,EAAMrD,OACfF,EAAwB,aAAhBE,EAAOJ,KAAsBI,EAAOsD,QAAUtD,EAAOF,MAC7D3C,EAAO6C,EAAO7C,KAEpBoG,KAAKC,SAAL,eACKrG,EAAO2C,M,8BAIhB,SAAiBuD,GACb,IAAII,EAAM,CAACc,SAAUhB,KAAKV,MAAM+B,gBAAiB5B,OAAQO,KAAKX,MAAM8C,QAASvI,KAAMoG,KAAKX,MAAM+C,WAC9FlD,EAAGkB,KAAK,aAAaF,GACrBF,KAAKC,SAAS,CAAEoB,gBAAiB,GAAI3C,SAAQ,IAC7CoB,EAAM3F,mB,6BAGV,SAAgBoF,EAAOyB,GACnB,IAAId,EAAM,CAACX,OAAQA,EAAQyB,SAAUA,EAAUvB,OAAQO,KAAKX,MAAM8C,QAASvI,KAAMoG,KAAKX,MAAM+C,WAC5FlD,EAAGkB,KAAK,WAAYF,GACpBF,KAAKC,SAAS,CAACvB,SAAS,M,oBAI5B,WAAU,IAAD,OAGC2D,EAFUrC,KAAKV,MAAM8B,UAEGkB,KAAI,SAACC,GAAD,OAC9B,cAAC,EAAD,CAAUvB,SAAUuB,EAAKvB,SAAUC,WAAYsB,EAAKtB,WAAYC,UAAW,kBAAI,EAAKK,gBAAgBgB,EAAK1H,IAAI0H,EAAKvB,WAAWtC,QAAS,EAAKY,MAAMZ,aAErJ,OACI,gCACI,2CACA,gCACK2D,IAGD,sBAAMxB,SAAUb,KAAKsB,iBAArB,SACI,qCACI,kDACA,8CACA,uBAAO1H,KAAK,kBACLyC,KAAK,OACLE,MAAOyD,KAAKV,MAAM+B,gBAClB7E,SAAUwD,KAAKL,eAEf,uBACP,uBAAOtD,KAAK,SAASE,MAAM,gBAIvC,wBAAQrB,QAAS8E,KAAKwB,WAAtB,yB,GAlHO7F,IAAMmF,WCnBvB0B,E,4JACF,WACI,IAAIC,EAAM,QAIV,OAHIzC,KAAKX,MAAMqD,UACXD,EAAM,UAEF,+BACJ,6BACKzC,KAAKX,MAAMsD,aAGkB,MAA1B3C,KAAKX,MAAMuD,aACX,6BACI,wBAAQ1H,QAAS8E,KAAKX,MAAMuD,YAA5B,SAA0CH,MAI9CzC,KAAKX,MAAMwD,UAAmC,IAAvB7C,KAAKX,MAAMyD,WAClC,6BACI,wBAAQ5H,QAAS8E,KAAKX,MAAM0D,UAA5B,4B,GAnBCjC,aAwJVkC,E,kDA1HX,WAAY3D,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,OAAO,EAAKF,MAAME,OAAQyB,SAAU,EAAK3B,MAAM2B,SAAUiC,YAAa,GAAIC,UAAW,GAAIC,WAAY,EAAGL,UAAW,EAAGM,YAAa,IACjJ,EAAKC,SAAW,EAAKA,SAASzD,KAAd,gBAChB,EAAK0D,WAAa,EAAKA,WAAW1D,KAAhB,gBAClB,EAAK2D,gBAAkB,EAAKA,gBAAgB3D,KAArB,gBALR,E,qDAQnB,WAAoB,IAAD,OACfS,MAAM,eAAe,IAAIC,gBAAgB,CAACf,OAAOS,KAAKX,MAAME,UACvD7E,MAAK,SAAAC,GAAG,OAAEA,EAAI4F,UACd7F,MAAK,SAAAC,GAQF,IAPA,IAAI6I,EAAU,EAAKlE,MAAM2D,YACrBQ,EAAc,EAAKnE,MAAM4D,UACzBQ,EAAM,EAAKpE,MAAM6D,WACjBQ,EAAI,EAAKrE,MAAMwD,UACfc,EAAQ,EAAKtE,MAAM8D,YAGdxC,EAAE,EAAEA,EAAEjG,EAAIN,OAAOuG,IACtB4C,EAAQ9C,KAAK/F,EAAIiG,GAAGhH,MACpB6J,EAAY/C,KAAK/F,EAAIiG,GAAGnB,QACxBiE,IACAE,EAAMlD,KAAK/F,EAAIiG,GAAGgD,OACdjJ,EAAIiG,GAAGgD,OACPD,IAIR,EAAK1D,SAAS,CAACgD,YAAYO,EAASN,UAAUO,EAAYN,WAAWO,EAAKZ,UAAUa,EAAGP,YAAYQ,OAE3G1E,EAAGsB,GAAG,iBAAiB,SAAA5F,GACnB,IAAI4I,EAAU,EAAKlE,MAAM2D,YACrBQ,EAAc,EAAKnE,MAAM4D,UACzBQ,EAAM,EAAKpE,MAAM6D,WACjBS,EAAQ,EAAKtE,MAAM8D,YACvBI,EAAQ9C,KAAK9F,EAAKhB,MAClB6J,EAAY/C,KAAK9F,EAAK6E,QACtBiE,GAAY,EACZE,EAAMlD,MAAK,GACX,EAAKT,SAAS,CAACgD,YAAYO,EAASN,UAAUO,EAAaN,WAAWO,EAAIN,YAAYQ,OAG1F1E,EAAGsB,GAAG,eAAe,SAAA5F,GACjB,EAAKqF,SAAS,CAAC6C,UAAWlI,EAAKkI,UAAWM,YAAYxI,EAAKwI,iBAG/DlE,EAAGsB,GAAG,sBAAsB,SAAA5F,GACxB,IAAI4I,EAAU,EAAKlE,MAAM2D,YACrBQ,EAAc,EAAKnE,MAAM4D,UACzBQ,EAAM,EAAKpE,MAAM6D,WACjBS,EAAQ,EAAKtE,MAAM8D,YACnBO,EAAI,EAAKrE,MAAMwD,UAEfe,EAAOJ,EAAY9B,WADP,SAACC,GAAD,OAAaA,IAAYhH,EAAK6E,UAK1CmE,EAAMC,KACNF,GAAG,GACPD,GAAY,EACZF,EAAQ1B,OAAO+B,EAAK,GACpBD,EAAM9B,OAAO+B,EAAK,GAClBJ,EAAY3B,OAAO+B,EAAK,GACxB,EAAK5D,SAAS,CAACgD,YAAYO,EAASN,UAAUO,EAAaN,WAAWO,EAAIZ,UAAUa,EAAEP,YAAYQ,S,sBAI1G,SAAShD,GACL,IAAIkD,EAAQ9D,KAAKV,MAAM8D,YACvBU,EAAMlD,IAAK,EACX,IAAIkC,EAAY9C,KAAKV,MAAMwD,UAAY,EACvC5D,EAAGkB,KAAK,cAAc,CAACb,OAAOS,KAAKV,MAAMC,OAAQE,OAAOO,KAAKX,MAAMG,SAAUsD,UAAWA,EAAWM,YAAYU,EAAOC,MAAK,M,wBAG/H,SAAWnD,GACP,IAAIkD,EAAQ9D,KAAKV,MAAM8D,YACvBU,EAAMlD,IAAK,EACX,IAAIkC,EAAY9C,KAAKV,MAAMwD,UAAY,EACvC5D,EAAGkB,KAAK,cAAc,CAACb,OAAOS,KAAKV,MAAMC,OAAQE,OAAOO,KAAKX,MAAMG,SAAUsD,UAAWA,EAAWM,YAAYU,EAAOC,MAAK,M,6BAG/H,WACI7E,EAAGkB,KAAK,YAAY,CAACb,OAAOS,KAAKV,MAAMC,OAAQyB,SAAShB,KAAKV,MAAM0B,SAAUvB,OAAOO,KAAKX,MAAMG,SAAU5F,KAAKoG,KAAKX,MAAMsD,aAEzH3C,KAAKX,MAAM4C,iBAAiB,MAC5BjC,KAAKX,MAAM6C,cAAc,Q,oBAI7B,WAEI,IAFK,IAAD,OACA8B,EAAO,GADP,WAEKpD,GACD,EAAKtB,MAAM4D,UAAUtC,KAAK,EAAKvB,MAAMG,SACjC,EAAKF,MAAM8D,YAAYxC,GACvBoD,EAAKtD,MAAK,kBAAM,EAAK4C,WAAW1C,MAC/BoD,EAAKtD,MAAK,kBAAM,EAAK2C,SAASzC,MAGnCoD,EAAKtD,KAAK,OAPTE,EAAE,EAAEA,EAAEZ,KAAKV,MAAM6D,WAAWvC,IAAK,EAAjCA,GAWT,IADA,IAAIa,EAAU,GACLb,EAAE,EAAEA,EAAEZ,KAAKV,MAAM6D,WAAWvC,IACjCa,EAAQf,KAAK,cAAC,EAAD,CAAYgC,QAAS1C,KAAKV,MAAM8D,YAAYxC,GAChC+B,WAAY3C,KAAKV,MAAM2D,YAAYrC,GACnCgC,YAAaoB,EAAKpD,GAClBiC,SAAc,IAAJjC,GAAmB,OAAVoD,EAAK,GACxBlB,UAAW9C,KAAKV,MAAMwD,aAEnD,OAAQ,gCACJ,2CACA,6CAAgB9C,KAAKX,MAAM2B,YAC3B,gCACKS,IAEL,mDAAsBzB,KAAKV,MAAMwD,aACjC,wBAAQ5H,QAAS8E,KAAKuD,gBAAtB,0B,GAtHWzC,a,gBC7BvBmD,EAAQC,Q,IAmKOC,E,kDA/JX,WAAY9E,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT8E,MAAO,GACPC,aAAc,CACVC,SAAU,SACVC,MAAO,SACPC,OAAQ,WAGhB,EAAKC,kBAAoB,EAAKA,kBAAkB7E,KAAvB,gBACzB,EAAK8E,SAAW,EAAKA,SAAS9E,KAAd,gBAXD,E,sDAcnB,WASI,IATkB,IAAD,SAObI,KAAKX,MALLsF,EAFa,EAEbA,YACAC,EAHa,EAGbA,WACAC,EAJa,EAIbA,WACAC,EALa,EAKbA,UACAC,EANa,EAMbA,eAEAX,EAAQ,GACHY,EAAI,EAAGA,EAAIL,EAAaK,IAAK,CAElC,IADA,IAAIC,EAAc,GACTrE,EAAI,EAAGA,EAAIgE,EAAYhE,IAAK,CAEjC,IADA,IAAIsE,EAAc,GACTC,EAAI,EAAGA,EAAIN,EAAYM,IAAK,CAEjC,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIP,EAAWO,IAChB,IAANA,GAAiB,IAANF,GAAaE,IAAMP,EAAY,GAAW,IAANK,GAAaE,IAAMP,EAAY,GAAKK,IAAMN,EAAa,GAAa,IAANQ,GAAWF,IAAMN,EAAa,EAC5IO,EAAY1E,KAAKV,KAAKV,MAAM+E,aAAaC,UAClCS,EAAeM,IAAMzE,EAAIkE,EAAYO,GAAKN,EAAeI,IAAMH,EAAIH,EAAaM,EACvFC,EAAY1E,KAAKV,KAAKV,MAAM+E,aAAaG,QAEzCY,EAAY1E,KAAKV,KAAKV,MAAM+E,aAAaE,OAGjDW,EAAYxE,KAAK0E,GAErBH,EAAYvE,KAAKwE,GAErBd,EAAM1D,KAAKuE,GAEfjF,KAAKC,SAAS,CACVmE,MAAOA,EACPS,aACAC,YACAC,mBACD,WACC,EAAKN,kBAAkBM,Q,+BAI/B,SAAkBA,GAAiB,IAAD,EAK1B/E,KAAKV,MAHL8E,EAF0B,EAE1BA,MACAS,EAH0B,EAG1BA,WACAC,EAJ0B,EAI1BA,UAEAQ,EAAKP,EAAeM,EAAGE,EAAKR,EAAeI,EAC/Cf,EAAMoB,KAAKC,MAAMF,EAAKV,IAAaW,KAAKC,MAAMH,EAAKR,IAAYS,EAAKV,GAAYS,EAAKR,GAAa9E,KAAKV,MAAM+E,aAAaG,OAC1HxE,KAAKC,SAAS,CACVmE,Y,uCAIR,SAA0BsB,GAClBA,IAAc1F,KAAKX,OACnBW,KAAK0E,SAASgB,K,sBAItB,SAASrG,GAAQ,IAAD,OAER0F,EAIA1F,EAJA0F,eACAY,EAGAtG,EAHAsG,cACAd,EAEAxF,EAFAwF,WACAC,EACAzF,EADAyF,UAGAV,EACApE,KAAKV,MADL8E,MAEAkB,EAAKK,EAAcN,EAAGE,EAAKI,EAAcR,EACzCS,EAAKb,EAAeM,EAAGQ,EAAKd,EAAeI,EAC/Cf,EAAMoB,KAAKC,MAAMF,EAAKV,IAAaW,KAAKC,MAAMH,EAAKR,IAAYS,EAAKV,GAAYS,EAAKR,GAAa9E,KAAKV,MAAM+E,aAAaE,MAC1HH,EAAMoB,KAAKC,MAAMI,EAAKhB,IAAaW,KAAKC,MAAMG,EAAKd,IAAYe,EAAKhB,GAAYe,EAAKd,GAAa9E,KAAKV,MAAM+E,aAAaG,OAC1HxE,KAAKC,SAAS,CACVmE,MAAOA,EACPW,mBACD,WACC,EAAKN,kBAAkBM,Q,oBAI/B,WAAU,IAEFX,EACApE,KAAKV,MADL8E,MAGJ,OADArC,QAAQC,IAAIoC,GAER,8BACKA,EAAM9B,KAAI,SAASwD,EAAUlF,GAC9B,OACI,6BACCkF,EAASxD,KAAI,SAASyD,EAAMf,GACzB,IAAIgB,EAAa,OACbC,EAAmB,SAKvB,OAJKrF,EAAIoE,GAAK,GAAK,IACfgB,EAAa,SACbC,EAAmB,QAGnB,oBACIC,MACI,CACIC,UAAW,SACXC,cAAe,SACfC,gBAAiBJ,EACjBK,MAAON,GANnB,SAUA,uBACI5J,UAAY,OACZmK,YAAc,IACdC,GAAK,QACLC,OAAS,MACTC,MAAQ,MACRC,OAAS,MACTR,UAAY,SAPhB,SASI,gCACKJ,EAAKzD,KAAI,SAASsE,GACnB,OACI,6BACCA,EAAQtE,KAAI,SAASuE,GAClB,OACA,oBAAIzK,UAAY,OAAhB,SACKyK,gC,GA7IzB/F,a,iBCuRLgG,E,kDApRf,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTyH,KAAK,EACLC,eAAe,EACfrC,YAAa,EACbC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXmC,gBAAiB,GACjBC,gBAAiB,GACjBnC,eAAgB,CACZM,EAAG,EACHF,EAAG,GAEPQ,cAAe,CACXN,EAAG,EACHF,EAAG,GAEPgC,WAAY,GAEhB,EAAKC,sBAAwB,EAAKA,sBAAsBxH,KAA3B,gBAC7B,EAAKmD,UAAY,EAAKA,UAAUnD,KAAf,gBACjB,EAAKyH,aAAe,EAAKA,aAAazH,KAAlB,gBACpB,EAAK0H,gBAAkB,EAAKA,gBAAgB1H,KAArB,gBACvB,EAAK2H,YAAc,EAAKA,YAAY3H,KAAjB,gBACnB,EAAK4H,cAAgB,EAAKA,cAAc5H,KAAnB,gBACrB,EAAK6H,eAAiB,EAAKA,eAAe7H,KAApB,gBACtB,EAAK8H,cAAgB,EAAKA,cAAc9H,KAAnB,gBACrB,EAAK+H,SAAW,EAAKA,SAAS/H,KAAd,gBA7BD,E,sDAgCnB,WACII,KAAKoH,0B,mCAGT,WAAyB,IAAD,OAMhBrC,EAAiB,CACjBM,EAAGG,KAAKC,MAAMX,KACdK,EAAGK,KAAKC,MAAMZ,MAEdc,EAAgB,CAChBN,EAAGG,KAAKC,MAAMX,KACdK,EAAGK,KAAKC,MAAMZ,MAElB7E,KAAKC,SAAS,CACV0E,YAZc,EAadC,WAda,EAebE,UAbY,EAcZD,WAba,EAcbE,iBACAY,gBACAqB,eAAe,IAChB,WACC,EAAKjE,iB,uBAIb,WACI/C,KAAKqH,iB,0BAGT,WAOI,IAPY,IAMRO,EANO,EAKP5H,KAAKV,MAHL2H,EAFO,EAEPA,gBACAtC,EAHO,EAGPA,YACAC,EAJO,EAIPA,WAGKhE,EAAI,EAAGA,EAAI+D,EAAa/D,IAC7B,IAAK,IAAIoE,EAAI,EAAGA,EAAIJ,EAAYI,IAAK,CACjCiC,EAAgBvG,KAAK,IAGrB,IAFA,IAAImH,EAAsB,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,IACrDhE,EAAO,EACJA,EAAO,GAAG,CAEb,IAAIiE,EAAc9C,EAAI6C,EADtBD,EAAepC,KAAKC,MAAMD,KAAKuC,SAAWlE,IACc,GACpDmE,EAAepH,EAAIiH,EAAoBD,GAAc,GACrDE,EAAc,GAAKA,GAAenD,GAAeqD,EAAe,GAAKA,GAAgBrD,GACrFsC,EAAgBjC,EAAIpE,EAAIgE,GAAYlE,KAAK,IACzCuG,EAAgBjC,EAAIpE,EAAIgE,GAAY,EAAIf,GAAMnD,KAAKsE,GACnDiC,EAAgBjC,EAAIpE,EAAIgE,GAAY,EAAIf,GAAMnD,KAAKE,KAGnDqG,EAAgBjC,EAAIpE,EAAIgE,GAAYlE,KAAK,IACzCuG,EAAgBjC,EAAIpE,EAAIgE,GAAY,EAAIf,GAAMnD,KAAKoH,GACnDb,EAAgBjC,EAAIpE,EAAIgE,GAAY,EAAIf,GAAMnD,KAAKsH,IAEvDnE,IACAgE,EAAoB/F,OAAO8F,EAAc,IAIrD5H,KAAKC,SAAS,CACVgH,sB,6BAIR,WACIjH,KAAKC,SAAS,CACVkH,aAAcnH,KAAKV,MAAM6H,e,yBAIjC,SAAYlN,GACRA,EAAEE,iBADS,MAKP6F,KAAKV,MAFLyF,EAHO,EAGPA,eACAF,EAJO,EAIPA,WAEAoD,OAAOlD,EAAeI,GAAKN,EAAa,GAAK,GAAG7E,KAAK2H,SAAS5C,EAAeM,EAAGN,EAAeI,EAAI,K,2BAG3G,SAAclL,GACVA,EAAEE,iBADW,MAKT6F,KAAKV,MAFLyF,EAHS,EAGTA,eACAF,EAJS,EAITA,WAEAoD,OAAOlD,EAAeI,GAAKN,EAAa,EAAIA,GAAY7E,KAAK2H,SAAS5C,EAAeM,EAAGN,EAAeI,EAAI,K,4BAGnH,SAAelL,GACXA,EAAEE,iBADY,MAKV6F,KAAKV,MAFLyF,EAHU,EAGVA,eACAD,EAJU,EAIVA,UAEAmD,OAAOlD,EAAeM,GAAKP,EAAY,EAAIA,GAAW9E,KAAK2H,SAAS5C,EAAeM,EAAI,EAAGN,EAAeI,K,2BAGjH,SAAclL,GACVA,EAAEE,iBADW,MAKT6F,KAAKV,MAFLyF,EAHS,EAGTA,eACAD,EAJS,EAITA,UAEAmD,OAAOlD,EAAeM,GAAKP,EAAY,GAAK,GAAG9E,KAAK2H,SAAS5C,EAAeM,EAAI,EAAGN,EAAeI,K,sBAG1G,SAAS+C,EAAMC,GAAO,IAAD,EASbnI,KAAKV,MAPLyF,EAFa,EAEbA,eACAkC,EAHa,EAGbA,gBACAtC,EAJa,EAIbA,YACAC,EALa,EAKbA,WACAE,EANa,EAMbA,UACAD,EAPa,EAObA,WACAkC,EARa,EAQbA,IAEAqB,EAAU,CACV/C,EAAGN,EAAeM,EAClBF,EAAGJ,EAAeI,GAElBE,EAAI6C,EAAOpD,EACXK,EAAIgD,EAAOtD,EACf,GAAW,IAANQ,GAAiB,IAANF,GAAaE,IAAMP,EAAY,GAAW,IAANK,GAAaE,IAAMP,EAAY,GAAKK,IAAMN,EAAa,GAAa,IAANQ,GAAWF,IAAMN,EAAa,EAAI,CAChJ,IAAIhB,EACoBA,EAAd,IAANwB,GAAiB,IAANF,EAAgB,EACtBE,IAAMP,EAAY,GAAW,IAANK,EAAgB,EACvCE,IAAMP,EAAY,GAAKK,IAAMN,EAAa,EAAU,EACjD,EACZ,IAAIwD,EAAK7C,KAAKC,MAAMyC,EAAOpD,GAAYwD,EAAK9C,KAAKC,MAAM0C,EAAOtD,GAC1D0D,EAAKtB,EAAgBoB,EAAKC,EAAK1D,GAAYf,GAAM,GAAKiB,EAAYU,KAAKC,MAAMX,EAAY,GACzF0D,EAAKvB,EAAgBoB,EAAKC,EAAK1D,GAAYf,GAAM,GAAKgB,EAAaW,KAAKC,MAAMZ,EAAa,GAC/FE,EAAc,EAAQwD,EACtBxD,EAAc,EAAQyD,EAClBhD,KAAKC,MAAM8C,EAAKzD,KAAeF,EAAa,GAAKY,KAAKC,MAAM+C,EAAK3D,KAAgBF,EAAc,IAAGoC,GAAM,QAG5GhC,EAAc,EAAQmD,EACtBnD,EAAc,EAAQoD,EAE1BnI,KAAKC,SAAS,CACV8E,iBACAY,cAAeyC,EACfrB,QAEJ/G,KAAKsH,oB,oBAGT,WAAU,IAAD,EAUDtH,KAAKV,MAPLyF,EAHC,EAGDA,eACAkC,EAJC,EAIDA,gBACArC,EALC,EAKDA,WACAE,EANC,EAMDA,UACAD,EAPC,EAODA,WACAsC,EARC,EAQDA,WACAJ,EATC,EASDA,IAGA0B,EAAS,2BAA6B1D,EAAc,EAAQ,KAAOA,EAAc,EAAQ,KACzFlB,EAAO2B,KAAKC,MAAMV,EAAc,EAAQD,GAAaU,KAAKC,MAAMV,EAAc,EAAQF,GAAcD,EAExG,GADA6D,GAAU,aACNxB,EAAgBpD,GAChB,IAAK,IAAIjD,EAAI,EAAGA,EAAI,EAAGA,IACnB6H,GAAU,IAAMxB,EAAgBpD,GAAMjD,GAAG,GAAK,KAAOqG,EAAgBpD,GAAMjD,GAAG,GAAK,KAQ3F,OALImG,IACAA,GAAM,EACNzM,MAAM,yBAA2B6M,IAG9B,gCACH,qBAAK/K,UAAY,SAAjB,SACKqM,IAEL,cAAC,IAAD,CACIC,aAAgBC,IAChBC,SAAW,UACXC,YACI7I,KAAKuH,cAGb,cAAC,IAAD,CACImB,aAAgBC,IAChBC,SAAW,YACXC,YACI7I,KAAKwH,gBAGb,cAAC,IAAD,CACIkB,aAAgBC,IAChBC,SAAW,aACXC,YACI7I,KAAKyH,iBAGb,cAAC,IAAD,CACIiB,aAAgBC,IAChBC,SAAW,YACXC,YACI7I,KAAK0H,gBAKT1H,KAAKV,MAAM0H,eACL,cAAE,EAAF,CAAYE,gBACNlH,KAAKV,MAAM4H,gBAEftC,WACI5E,KAAKV,MAAMsF,WAEfD,YACI3E,KAAKV,MAAMqF,YAEfG,UACI9E,KAAKV,MAAMwF,UAEfD,WACI7E,KAAKV,MAAMuF,WAEfE,eACI/E,KAAKV,MAAMyF,eAEfY,cACI3F,KAAKV,MAAMqG,cAEfwB,WACInH,KAAKV,MAAM6H,aAzDxB,W,GArNIrG,aCGJgI,OAPf,YAAkC,IAAZhN,EAAW,EAAXA,QAIrB,OAAO,wBAAQL,KAAK,KAAKR,QAAQ,UAAUC,QAH9B,WACZY,EAAQ,SAEF,mBCyCOiN,OApCf,WAAgB,IAAD,EACcpN,IAAMC,SAASd,eAAekO,QAAQ,WADpD,mBACP1L,EADO,KACC5D,EADD,OAEkBiC,IAAMC,SAASd,eAAekO,QAAQ,aAFxD,mBAEP/K,EAFO,KAEGtE,EAFH,OAG4BgC,IAAMC,SAAS,MAH3C,mBAGPqN,EAHO,KAGQC,EAHR,OAIsBvN,IAAMC,SAAS,MAJrC,mBAIPuN,EAJO,KAIKC,EAJL,OAKUzN,IAAMC,SAAS,QALzB,mBAKPC,EALO,KAKDC,EALC,KAMd,OACC,gCACC,cAACoC,EAAD,CAAWZ,OAAQA,EAAQW,SAAUA,EAAUvE,UAAWA,EAAWC,YAAaA,IACxE,SAATkC,EACA,6BAEA,cAACwN,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UACC,cAAC,EAAD,CAAUjK,OAAQ4J,EAAY1J,OAAQnC,EAAQ1D,KAAMqE,MAErD,cAACuL,EAAA,EAAD,UACiB,OAAfL,EACA,cAACM,EAAD,CAAUlK,OAAQ4J,EAAYnI,SAAUiI,EAAetG,WAAY1E,EAAUuB,SAAUlC,EAAQ2E,iBAAkBiH,EAAkBhH,cAAekH,IACzI,gBAATvN,EACA,cAAC,EAAD,CAAUsG,QAAS7E,EAAQ8E,UAAWnE,EAAUgE,iBAAkBiH,EAAkBhH,cAAekH,IAC1F,SAATvN,EACA,cAAC,EAAD,IAEA,cAAC,EAAD,CAAMC,QAASA,WAMpB,cAAC,GAAD,CAAYA,QAASA,QCvCxB4N,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.841d49e2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: \"http://localhost:9000\",\r\n\t//baseURL: \"https://magic-maze-backend.herokuapp.com\",\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport axios from './Axios';\r\nimport validator from 'validator';\r\n\r\nfunction Register({ setUserID, setUsername, name, email, password, rePassword }) {\r\n\tconst register = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tvar canRegister = false;\r\n\t\tif(name.length==0) {\r\n\t\t\talert(\"Name is empty!\");\r\n\t\t}else if(email.length==0) {\r\n\t\t\talert(\"Email is empty!\");\r\n\t\t}else if(validator.isEmail(email)==false) {\r\n\t\t\talert(\"Email does not exist!\");\r\n\t\t}else if(password.length==0) {\r\n\t\t\talert(\"Password is empty!\");\r\n\t\t}else if(password.length<8) {\r\n\t\t\talert(\"Password should contain at least 8 letters!\");\r\n\t\t}else if(password!=rePassword){\r\n\t\t\talert(\"Re-entered password is not same to new password!\");\r\n\t\t}else try {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\temail: email,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\tcanRegister = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"This email has been used for registration. You may register with another email or login.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(canRegister){\r\n\t\t\t\tawait axios.post(\"/createAccount\", {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tsetUserID(res.data._id);\r\n\t\t\t\t\tsetUsername(res.data.name);\r\n\t\t\t\t\tsessionStorage.setItem('userID', res.data._id);\r\n\t\t\t\t\tsessionStorage.setItem('username', res.data.name);\r\n\t\t\t\t\talert('Register successfully');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant='secondary' onClick={register}>Register</Button>;\r\n}\r\n\r\nfunction LoginWithEmail({ setUserID, setUsername, email, password}) {\r\n\tconst loginWithEmail = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\talert('Invalid email or password');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetUserID(res.data[0]._id);\r\n\t\t\t\t\tsetUsername(res.data[0].name);\r\n\t\t\t\t\tsessionStorage.setItem('userID', res.data[0]._id);\r\n\t\t\t\t\tsessionStorage.setItem('username', res.data[0].name);\r\n\t\t\t\t\talert('Login successfully');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal Error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant='secondary' onClick={loginWithEmail}>Login</Button>;\r\n}\r\n\r\nfunction LogoutButton({ setUserID, setUsername }) {\r\n\tconst logout = async () => {\r\n\t\ttry {\r\n\t\t\tsetUserID(null);\r\n\t\t\tsetUsername(null);\r\n\t\t\tsessionStorage.clear();\r\n\t\t\talert('Logout successfully');\r\n\t\t} catch (error) {\r\n\t\t\talert('Failed to connect');\r\n\t\t}\r\n\t};\r\n\treturn <Button size=\"lg\" variant='secondary' onClick={logout}>Log out</Button>;\r\n}\r\n\r\nfunction LoginForm({ setUserID, setUsername }) {\r\n\tconst [mode, setMode]  = React.useState('Login');\r\n\tconst toggleMode = () => {\r\n\t\tsetMode((oldMode) => (oldMode === 'Login' ? 'Register' : 'Login'));\r\n\t};\r\n\t\r\n\tconst [name, setName] = React.useState('');\r\n\tconst [email, setEmail] = React.useState('');\r\n\tconst [password, setPassword] = React.useState('');\r\n\tconst [rePassword, setRePassword] = React.useState('');\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tsetName('');\r\n\t\tsetEmail('');\r\n\t\tsetPassword('');\r\n\t\tsetRePassword('');\r\n\t}, [mode]);\r\n\t\r\n\treturn (\r\n\t\t<div className='login_form'>\r\n\t\t\t{mode === 'Register'?\r\n\t\t\t<input\r\n\t\t\t\ttype = 'name'\r\n\t\t\t\tplaceholder = 'name'\r\n\t\t\t\tvalue = {name}\r\n\t\t\t\tonChange = {(e) => setName(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t:<></>}\r\n\t\t\t<input\r\n\t\t\t\ttype = 'email'\r\n\t\t\t\tplaceholder = 'email'\r\n\t\t\t\tvalue = {email}\r\n\t\t\t\tonChange = {(e) => setEmail(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype = 'password'\r\n\t\t\t\tplaceholder = 'password'\r\n\t\t\t\tvalue = {password}\r\n\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t{mode === 'Register'?\r\n\t\t\t<input\r\n\t\t\t\ttype = 'password'\r\n\t\t\t\tplaceholder = 'Re-enter password'\r\n\t\t\t\tvalue = {rePassword}\r\n\t\t\t\tonChange = {(e) => setRePassword(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t:<></>}\r\n\t\t\t{mode === 'Login' ? \r\n\t\t\t\t<LoginWithEmail\r\n\t\t\t\t\tsetUserID={setUserID}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\temail={email}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t/>\r\n\t\t\t\t:\r\n\t\t\t\t<Register\r\n\t\t\t\t\tsetUserID={setUserID}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\temail={email}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t\trePassword={rePassword}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<span>You may also </span>\r\n\t\t\t\t<a href='#' onClick={() => {toggleMode();}}>\r\n\t\t\t\t\t{mode === 'Login' ? 'register a new account' : 'go to login'}\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction LoginButton({ setUserID, setUsername }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Join us!</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<LoginForm setUserID={setUserID} setUsername={setUsername}/>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport {Register, LoginWithEmail, LogoutButton, LoginForm, LoginButton};","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport axios from './Axios';\r\nimport validator from 'validator';\r\n\r\nfunction ShowProfile({ userID, username }) {\r\n\tconst [show, setShow] = React.useState(true);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tProfile\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Player profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div>Name: {username}</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ChangePasswordConfirm({ userID, password, newPassword, reNewPassword, setShow }) {\r\n\tconst changePassword = async (e) => {\r\n\t\tvar canUpdate = false;\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\t_id: userID,\r\n\t\t\t\tpassword: password,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\talert('Password is wrong');\r\n\t\t\t\t}else if(newPassword.length==0) {\r\n\t\t\t\t\talert(\"New password is empty!\");\r\n\t\t\t\t}else if(newPassword.length<8) {\r\n\t\t\t\t\talert(\"New password should contain at least 8 letters!\");\r\n\t\t\t\t}else if(newPassword!=reNewPassword){\r\n\t\t\t\t\talert(\"Re-entered new password is not same to new password!\");\r\n\t\t\t\t}else {\r\n\t\t\t\t\tcanUpdate = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(canUpdate) {\r\n\t\t\t\tawait axios.post(\"/updateAccount\", {\r\n\t\t\t\t\t_id: userID,\r\n\t\t\t\t\tpassword: newPassword,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif(res.data.ok==1){\r\n\t\t\t\t\t\talert('Password is updated');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetShow(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal Error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant=\"primary\" onClick={changePassword}>Confirm</Button>;\r\n}\r\n\r\nfunction ChangePasswordButton({ userID }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\tconst [password, setPassword] = React.useState(\"\");\r\n\tconst [newPassword, setNewPassword] = React.useState(\"\");\r\n\tconst [reNewPassword, setReNewPassword] = React.useState(\"\");\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetPassword('');\r\n\t\tsetNewPassword('');\r\n\t\tsetReNewPassword('');\r\n\t}, [show]);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"md\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tChange password\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Change password</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\t\t\t\tplaceholder = 'Current password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName = 'form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {newPassword}\r\n\t\t\t\t\t\t\t\tplaceholder = 'New password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName = 'form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {reNewPassword}\r\n\t\t\t\t\t\t\t\tplaceholder = 'Re-enter new password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setReNewPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName='form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<ChangePasswordConfirm userID={userID} password={password} newPassword={newPassword} reNewPassword={reNewPassword} setShow={setShow}/>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ProfileButton({ userID, username, setUsername }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tProfile\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Player profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div>Name: {username}</div>\r\n\t\t\t\t\t<div>Symbol: #</div>\r\n\t\t\t\t\t<div>Game record: </div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<ChangePasswordButton userID={userID} />\r\n\t\t\t\t\t<Button variant=\"primary\">Save changes</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport {ProfileButton};","import { Nav, Navbar, Button, Form, FormControl } from 'react-bootstrap';\r\nimport { LogoutButton, LoginButton } from './Login';\r\nimport { ProfileButton } from './Profile';\r\n\r\nfunction TopNavbar({ userID, username, setUserID, setUsername }) {\r\n\treturn(\r\n\t<div>\r\n\t\t<Navbar className='py-4' bg='dark' variant='dark'>\r\n\t\t\t<Navbar.Brand href=\"https://github.com/luyou00001/CSCI-3100-Project-E3\t\">Magic Maze</Navbar.Brand>\r\n\t\t\t<Nav>\r\n\t\t\t\t<Navbar.Text>• A game created by CSCI3100 Project Group E3</Navbar.Text>\r\n\t\t\t</Nav>\r\n\t\t\t<Nav className='ml-auto'></Nav>\r\n\t\t\t{userID===null?\r\n\t\t\t\t<Nav.Link href='#home'><LoginButton setUserID={setUserID} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t:(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Navbar.Brand>Welcome {username}</Navbar.Brand>\r\n\t\t\t\t\t<Nav.Link href='#home'><ProfileButton userID={userID} username={username} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t\t\t<Nav.Link href='#home'><LogoutButton setUserID={setUserID} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Navbar>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport {TopNavbar};","import React, { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Match() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst matching = () => {\r\n\t\tsetLoading(!loading);\r\n\t}\r\n\treturn <button className=\"MenuButton\" onClick={matching}>Matching {loading?<Spinner animation=\"border\" role=\"status\" />:<></>}</button>\r\n}\r\n\r\nfunction CustomRoom({ setMode }) {\r\n\tconst customRoom = () => {\r\n\t\tsetMode(\"FindingRoom\");\r\n\t}\r\n\treturn <button className=\"MenuButton\" onClick={customRoom}>Custom room</button>\r\n}\r\n\r\nfunction Demo({ setMode }) {\r\n\tconst demo = () => {\r\n\t\tsetMode(\"Demo\");\r\n\t}\r\n\treturn <button className=\"MenuButton\" onClick={demo}>Demo</button>\r\n}\r\n\r\nfunction Menu({ setMode }) {\r\n\treturn(\r\n\t\t<div className='menu'>\r\n\t\t\t<h1>Menu</h1>\r\n\t\t\t<div>\r\n\t\t\t\t<Match />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CustomRoom setMode={setMode}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Demo setMode={setMode}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Menu;","import io from 'socket.io-client';\r\nconst ws = io(\"http://localhost:9000\");\r\nexport default ws;","import React from 'react';\r\nimport ws from './service';\r\n\r\nclass SendChat extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {roomid:this.props.roomid, playerid:this.props.userid, name:this.props.name, value: '', history: []};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n        let obj = {roomid:this.state.roomid, userid:this.state.playerid, name: this.state.name, message: this.state.value}\r\n        ws.emit('messages',obj);\r\n        this.setState({value: ''});\r\n        event.preventDefault();\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/messages?'+new URLSearchParams({roomid:this.props.roomid}))\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.setState({history:res})\r\n                //console.log(res);\r\n                //console.log(this.props.roomname);\r\n            });\r\n        ws.on('message', message => {\r\n            // console.log(message);\r\n            let his = this.state.history;\r\n            his.push(message);\r\n            this.setState({history:his});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        //console.log(this.state.history);\r\n        let history = this.state.history;\r\n        let chatlist = [];\r\n        for (var i=0;i<history.length;i++){\r\n            let name = history[i].name;\r\n            let message = history[i].message;\r\n            chatlist.push(<div>{name}: {message}</div>);\r\n        }\r\n      return (\r\n          <div>\r\n              <h1>Chat Room</h1>\r\n              {chatlist}\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Input Text</label><br></br>\r\n                <textarea name=\"value\" type=\"text\" value={this.state.value} placeholder=\"Send a message\" onChange={this.handleChange} />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default SendChat;","import React, { Component } from 'react';\r\nimport ws from './service';\r\n\r\nclass Roomline extends Component{\r\n    render(){\r\n        // invite button display (to be implemented)\r\n        return (<tr>\r\n                    <td>\r\n                        {this.props.roomname}\r\n                    </td>\r\n                    <td>\r\n                        {this.props.numofusers}/4\r\n                    </td>\r\n                    {\r\n                        <td>\r\n                            <button onClick={this.props.handleadd}>Add</button>\r\n                        </td>\r\n                    }\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass RoomList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {room_list:[], input_room_name:\"\", loading:false};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCreateRoom = this.handleCreateRoom.bind(this);\r\n        this.handleEnterRoom = this.handleEnterRoom.bind(this);\r\n        this.handleRank = this.handleRank.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/room')\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({room_list:res}));\r\n        ws.on('createroom', data => {\r\n            //console.log(data);\r\n            let display = this.state.room_list;\r\n            display.push(data);\r\n            //console.log(display);\r\n            this.setState({room_list:display});\r\n        });\r\n        ws.on('addroomlist', data => {\r\n            let display = this.state.room_list;\r\n            const isMatch = (element) => element._id === data._id;\r\n            var match = display.findIndex(isMatch);\r\n            if (match!==-1)\r\n                display[match].numofusers += 1;\r\n            this.setState({room_list:display});\r\n        });\r\n        ws.on('downroomlist', data => {\r\n            let display = this.state.room_list;\r\n            const isMatch = (element) => element._id === data._id;\r\n            var match = display.findIndex(isMatch);\r\n            if (match!==-1)\r\n                display[match].numofusers -= 1;\r\n            this.setState({room_list:display});\r\n        });\r\n        ws.on('deleteroom', data => {\r\n            let display = this.state.room_list;\r\n            const isMatch = (element) => element._id === data._id;\r\n            var match = display.findIndex(isMatch);\r\n            if (match!==-1)\r\n                display.splice(display.findIndex(isMatch),1);\r\n            this.setState({room_list:display});\r\n        });\r\n\r\n        ws.on('getroominfo',(data)=>{\r\n            console.log(\"OK\");\r\n            this.setState({loading: false});\r\n            this.props.setGameroomenter(data.roomname);\r\n            this.props.setGameroomid(data.roomid);\r\n        });\r\n\r\n        ws.on('failjoin',(data)=>{\r\n            alert(\"Fail to join the room: \" + data.roomname);\r\n        })\r\n    }\r\n\r\n    handleRank(){\r\n        this.setState({loading: true});\r\n        ws.emit('ranking',{userid: this.props.user_id, name: this.props.user_name});\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCreateRoom(event) {\r\n        let obj = {roomname: this.state.input_room_name, userid: this.props.user_id, name: this.props.user_name};\r\n        ws.emit('createroom',obj);\r\n        this.setState({ input_room_name: '', loading:true});\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleEnterRoom(roomid,roomname){\r\n        let obj = {roomid: roomid, roomname: roomname, userid: this.props.user_id, name: this.props.user_name};\r\n        ws.emit('joinroom', obj);\r\n        this.setState({loading: true});\r\n    }\r\n\r\n\r\n    render() {\r\n        let room_list = this.state.room_list;\r\n        //console.log(room_list);\r\n        const displaylist = room_list.map((room) =>\r\n            <Roomline roomname={room.roomname} numofusers={room.numofusers} handleadd={()=>this.handleEnterRoom(room._id,room.roomname)} loading={this.state.loading}></Roomline>\r\n        );\r\n        return (\r\n            <div>\r\n                <h1>Room List</h1>\r\n                <table>\r\n                    {displaylist}\r\n                </table>\r\n                {\r\n                    <form onSubmit={this.handleCreateRoom}>\r\n                        <fieldset>\r\n                            <legend>Create Room:</legend>\r\n                            <label>Room Name</label>\r\n                            <input name=\"input_room_name\"\r\n                                   type=\"text\"\r\n                                   value={this.state.input_room_name}\r\n                                   onChange={this.handleChange}\r\n                                    />\r\n                                   <br></br>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </fieldset>\r\n                    </form>\r\n                }\r\n                <button onClick={this.handleRank}>Rank</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default RoomList;","import React, { Component } from 'react';\r\nimport ws from './service';\r\n\r\n//member\r\nclass Playerline extends Component{\r\n    render(){\r\n        let str = \"Ready\"\r\n        if (this.props.isready){\r\n            str = \"Cancel\"\r\n        }\r\n        return (<tr>\r\n            <td>\r\n                {this.props.playername}\r\n            </td>\r\n                {\r\n                    this.props.handleready != null &&\r\n                    <td>\r\n                        <button onClick={this.props.handleready}>{str}</button>\r\n                    </td>\r\n                }\r\n                {\r\n                    this.props.position && this.props.ready_num===4 &&\r\n                    <td>\r\n                        <button onClick={this.props.startGame}>Start</button>\r\n                    </td>\r\n                }\r\n            </tr>\r\n            )\r\n    }\r\n}\r\n\r\n// Class Chatroom (to be imported)\r\n\r\nclass Gameroom extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {roomid:this.props.roomid, roomname: this.props.roomname, player_list: [], player_id: [], player_num: 0, ready_num: 0 ,ready_state: []};\r\n        this.addready = this.addready.bind(this);\r\n        this.minusready = this.minusready.bind(this);\r\n        this.handleLeaveRoom = this.handleLeaveRoom.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/roommember?'+new URLSearchParams({roomid:this.props.roomid}))\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                let players = this.state.player_list;\r\n                let players_ids = this.state.player_id;\r\n                let num = this.state.player_num;\r\n                let t = this.state.ready_num;\r\n                let ready = this.state.ready_state;\r\n                // console.log(res.length);\r\n                // console.log(res);\r\n                for (var i=0;i<res.length;i++){\r\n                    players.push(res[i].name);\r\n                    players_ids.push(res[i].userid);\r\n                    num++;\r\n                    ready.push(res[i].ready);\r\n                    if (res[i].ready)\r\n                        t++;\r\n                }\r\n                // console.log(\"How are you\")\r\n                // console.log(res);\r\n                this.setState({player_list:players, player_id:players_ids,player_num:num, ready_num:t, ready_state:ready});\r\n            });\r\n        ws.on('addroommember', data =>{\r\n            let players = this.state.player_list;\r\n            let players_ids = this.state.player_id;\r\n            let num = this.state.player_num;\r\n            let ready = this.state.ready_state;\r\n            players.push(data.name);\r\n            players_ids.push(data.userid);\r\n            num = num + 1;\r\n            ready.push(false);\r\n            this.setState({player_list:players, player_id:players_ids, player_num:num,ready_state:ready});\r\n        });\r\n\r\n        ws.on('readychange', data => {\r\n            this.setState({ready_num: data.ready_num, ready_state:data.ready_state});\r\n        });\r\n\r\n        ws.on('decreaseroommember', data =>{\r\n            let players = this.state.player_list;\r\n            let players_ids = this.state.player_id;\r\n            let num = this.state.player_num;\r\n            let ready = this.state.ready_state;\r\n            let t = this.state.ready_num;\r\n            const isMatch = (element) => element === data.userid;\r\n            let temp = players_ids.findIndex(isMatch);\r\n            //console.log(players_ids);\r\n            //console.log(data);\r\n            //console.log(temp);\r\n            if (ready[temp])\r\n                t-=1;\r\n            num = num - 1;\r\n            players.splice(temp,1);\r\n            ready.splice(temp,1);\r\n            players_ids.splice(temp,1);\r\n            this.setState({player_list:players, player_id:players_ids, player_num:num,ready_num:t,ready_state:ready});\r\n        });\r\n    }\r\n\r\n    addready(i){\r\n        let array = this.state.ready_state;\r\n        array[i] = true;\r\n        let ready_num = this.state.ready_num + 1;\r\n        ws.emit('readychange',{roomid:this.state.roomid, userid:this.props.playerid, ready_num: ready_num, ready_state:array, save:true})\r\n    }\r\n\r\n    minusready(i){\r\n        let array = this.state.ready_state;\r\n        array[i] = false;\r\n        let ready_num = this.state.ready_num - 1;\r\n        ws.emit('readychange',{roomid:this.state.roomid, userid:this.props.playerid, ready_num: ready_num, ready_state:array, save:false})\r\n    }\r\n\r\n    handleLeaveRoom(){\r\n        ws.emit('leaveroom',{roomid:this.state.roomid, roomname:this.state.roomname, userid:this.props.playerid, name:this.props.playername});\r\n        //this.setState({game_room_enter:null, game_room_id:null});\r\n        this.props.setGameroomenter(null);\r\n        this.props.setGameroomid(null);\r\n    }\r\n\r\n    //invite button function for each player (to be implemented)\r\n    render(){\r\n        let list = [];\r\n        for (let i=0;i<this.state.player_num;i++){\r\n            if (this.state.player_id[i]===this.props.playerid) {\r\n                if (this.state.ready_state[i])\r\n                    list.push(() => this.minusready(i));\r\n                else list.push(() => this.addready(i));\r\n            }\r\n            else{\r\n                list.push(null);\r\n            }\r\n        }\r\n        let display = [];\r\n        for (let i=0;i<this.state.player_num;i++){\r\n            display.push(<Playerline isready={this.state.ready_state[i]}\r\n                                     playername={this.state.player_list[i]}\r\n                                     handleready={list[i]}\r\n                                     position={i===0 && list[0]!==null}\r\n                                     ready_num={this.state.ready_num}/>);\r\n        }\r\n        return (<div>\r\n            <h1>Game Room</h1>\r\n            <h1>You're in: {this.props.roomname}</h1>\r\n            <table>\r\n                {display}\r\n            </table>\r\n            <h2>Number of ready: {this.state.ready_num}</h2>\r\n            <button onClick={this.handleLeaveRoom}>Leave</button>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Gameroom;","import React, {\n    Component\n} from 'react';\nimport pressed from \"pressed\"\npressed.start()\n\nclass GameBoard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            board: [],\n            entityStates: {\n                entrance: '╬',\n                empty: '　',\n                player: '♂'\n            }\n        }\n        this.setPlayerPosition = this.setPlayerPosition.bind(this)\n        this.setBoard = this.setBoard.bind(this)\n    }\n    \n    componentWillMount() {\n        let {\n            boardHeight,\n            boardWidth,\n            areaHeight,\n            areaWidth,\n            playerPosition\n        } = this.props\n        let board = []\n        for (let j = 0; j < boardHeight; j++) {\n            let tempArray_1 = []\n            for (let i = 0; i < boardWidth; i++) {\n                let tempArray_2 = []\n                for (let y = 0; y < areaHeight; y++) {\n                    let tempArray_3 = []\n                    for (let x = 0; x < areaWidth; x++) {                        \n                        if ((x === 0 && y === 0) || (x === areaWidth - 1 && y === 0) || (x === areaWidth - 1 && y === areaHeight - 1) || (x === 0 && y === areaHeight - 1)) {\n                            tempArray_3.push(this.state.entityStates.entrance)\n                        } else if (playerPosition.x === i * areaWidth + x && playerPosition.y === j * areaHeight + y) {\n                            tempArray_3.push(this.state.entityStates.player)\n                        } else {\n                            tempArray_3.push(this.state.entityStates.empty)\n                        }\n                    }\n                    tempArray_2.push(tempArray_3)\n                }\n                tempArray_1.push(tempArray_2)\n            }\n            board.push(tempArray_1)\n        }\n        this.setState({\n            board: board,\n            areaHeight,\n            areaWidth,\n            playerPosition\n        }, () => {\n            this.setPlayerPosition(playerPosition)\n        })\n    }\n\n    setPlayerPosition(playerPosition) {\n        let {\n            board,\n            areaHeight,\n            areaWidth\n        } = this.state\n        let px = playerPosition.x, py = playerPosition.y\n        board[Math.floor(py / areaHeight)][Math.floor(px / areaWidth)][py % areaHeight][px % areaWidth] = this.state.entityStates.player\n        this.setState({\n            board\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps === this.props) {} else {\n            this.setBoard(nextProps)\n        }\n    }\n\n    setBoard(props) {\n        let {\n            playerPosition,\n            prevPlayerPos,\n            areaHeight,\n            areaWidth\n        } = props\n        let {\n            board\n        } = this.state\n        let px = prevPlayerPos.x, py = prevPlayerPos.y\n        let nx = playerPosition.x, ny = playerPosition.y\n        board[Math.floor(py / areaHeight)][Math.floor(px / areaWidth)][py % areaHeight][px % areaWidth] = this.state.entityStates.empty\n        board[Math.floor(ny / areaHeight)][Math.floor(nx / areaWidth)][ny % areaHeight][nx % areaWidth] = this.state.entityStates.player\n        this.setState({\n            board: board,\n            playerPosition\n        }, () => {\n            this.setPlayerPosition(playerPosition)\n        })\n    }\n\n    render() {\n        let {\n            board\n        } = this.state\n        console.log(board);\n        return(\n            <div>\n                {board.map(function(boardRow, i) {\n                return (\n                    <tr>\n                    {boardRow.map(function(area, j) {\n                        let fontColour = \"blue\"\n                        let backgroundColour = \"yellow\"\n                        if ((i + j) % 2 == 0) {\n                            fontColour = \"yellow\"\n                            backgroundColour = \"blue\"\n                        }\n                        return (\n                            <td\n                                style = {\n                                    {\n                                        textAlign: \"center\",\n                                        verticalAlign: \"middle\",\n                                        backgroundColor: backgroundColour,\n                                        color: fontColour\n                                    }\n                                }\n                            >\n                            <table\n                                className = \"area\"\n                                cellSpacing = \"0\"\n                                id = \"table\"\n                                border = \"3px\"\n                                width = \"100\"\n                                height = \"100\"\n                                textAlign = \"center\"\n                            >\n                                <tbody>\n                                    {area.map(function(areaRow) {\n                                    return (\n                                        <tr>\n                                        {areaRow.map(function(cell) {\n                                            return ( \n                                            <td className = \"area\">\n                                                {cell}\n                                                </td>\n                                            )\n                                        })}\n                                        </tr>\n                                    );\n                                    })}\n                                </tbody>\n                            </table>\n                            </td>\n                        )\n                    })}\n                    </tr>\n                );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default GameBoard","import React, {\n    Component\n} from 'react';\nimport GameBoard from './GameBoard'\nimport _ from 'lodash'\nimport KeyHandler, {KEYDOWN} from 'react-key-handler';\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            win: false,\n            showGameBoard: false,\n            boardHeight: 0,\n            boardWidth: 0,\n            areaHeight: 0,\n            areaWidth: 0,\n            randomEntrances: [],\n            randomPositions: [],\n            playerPosition: {\n                x: 0,\n                y: 0\n            },\n            prevPlayerPos: {\n                x: 0,\n                y: 0\n            },\n            totalMoves: 0\n        }\n        this.initializeBoardPlayer = this.initializeBoardPlayer.bind(this)\n        this.startGame = this.startGame.bind(this)\n        this.setEntrances = this.setEntrances.bind(this)\n        this.countTotalMoves = this.countTotalMoves.bind(this)\n        this.handleKeyUp = this.handleKeyUp.bind(this)\n        this.handleKeyDown = this.handleKeyDown.bind(this)\n        this.handleKeyRight = this.handleKeyRight.bind(this)\n        this.handleKeyLeft = this.handleKeyLeft.bind(this)\n        this.makeMove = this.makeMove.bind(this)\n    }\n\n    componentWillMount() {\n        this.initializeBoardPlayer()\n    }\n\n    initializeBoardPlayer() {\n        // TODO\n        let boardWidth = 5\n        let boardHeight = 5\n        let areaWidth = 5\n        let areaHeight = 5\n        let playerPosition = {\n            x: Math.floor(areaWidth / 2),\n            y: Math.floor(areaHeight / 2)\n        }\n        let prevPlayerPos = {\n            x: Math.floor(areaWidth / 2),\n            y: Math.floor(areaHeight / 2)\n        }\n        this.setState({\n            boardHeight,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            playerPosition,\n            prevPlayerPos,\n            showGameBoard: true\n        }, () => {\n            this.startGame()\n        })\n    }\n\n    startGame() {\n        this.setEntrances()\n    }\n\n    setEntrances() {\n        let {\n            randomEntrances,\n            boardHeight,\n            boardWidth\n        } = this.state\n        let randomValues\n        for (let i = 0; i < boardHeight; i++) {\n            for (let j = 0; j < boardWidth; j++) {\n                randomEntrances.push([])\n                let entranceDifferences = [[1, -1], [1, 0], [0, 1], [-1, 1]]\n                let temp = 4\n                while (temp > 0) {\n                    randomValues = Math.floor(Math.random() * temp)\n                    let targetWidth = j + entranceDifferences[randomValues][0]\n                    let targetHeight = i + entranceDifferences[randomValues][1]\n                    if (targetWidth < 0 || targetWidth >= boardHeight || targetHeight < 0 || targetHeight >= boardHeight) {\n                        randomEntrances[j + i * boardWidth].push([])\n                        randomEntrances[j + i * boardWidth][4 - temp].push(j)\n                        randomEntrances[j + i * boardWidth][4 - temp].push(i)\n                    }\n                    else {\n                        randomEntrances[j + i * boardWidth].push([])\n                        randomEntrances[j + i * boardWidth][4 - temp].push(targetWidth)\n                        randomEntrances[j + i * boardWidth][4 - temp].push(targetHeight)\n                    }\n                    temp--\n                    entranceDifferences.splice(randomValues, 1)\n                }\n            }\n        }\n        this.setState({\n            randomEntrances\n        })\n    }\n\n    countTotalMoves() {\n        this.setState({\n            totalMoves: ++this.state.totalMoves\n        })\n    }\n\n    handleKeyUp(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaHeight\n        } = this.state\n        if (Number(playerPosition.y) % areaHeight - 1 >= 0) this.makeMove(playerPosition.x, playerPosition.y - 1)\n    }\n\n    handleKeyDown(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaHeight\n        } = this.state\n        if (Number(playerPosition.y) % areaHeight + 1 < areaHeight) this.makeMove(playerPosition.x, playerPosition.y + 1)\n    }\n\n    handleKeyRight(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaWidth\n        } = this.state\n        if (Number(playerPosition.x) % areaWidth + 1 < areaWidth) this.makeMove(playerPosition.x + 1, playerPosition.y)\n    }\n\n    handleKeyLeft(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaWidth\n        } = this.state\n        if (Number(playerPosition.x) % areaWidth - 1 >= 0) this.makeMove(playerPosition.x - 1, playerPosition.y)\n    }\n\n    makeMove(newX, newY) {\n        let {\n            playerPosition,\n            randomEntrances,\n            boardHeight,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            win\n        } = this.state\n        let prevPos = {\n            x: playerPosition.x,\n            y: playerPosition.y\n        }\n        let x = newX % areaWidth\n        let y = newY % areaHeight\n        if ((x === 0 && y === 0) || (x === areaWidth - 1 && y === 0) || (x === areaWidth - 1 && y === areaHeight - 1) || (x === 0 && y === areaHeight - 1)) {\n            let temp\n            if (x === 0 && y === 0) temp = 0\n            else if (x === areaWidth - 1 && y === 0) temp = 1\n            else if (x === areaWidth - 1 && y === areaHeight - 1) temp = 2\n            else temp = 3\n            let ax = Math.floor(newX / areaWidth), ay = Math.floor(newY / areaHeight)\n            let tx = randomEntrances[ax + ay * boardWidth][temp][0] * areaWidth + Math.floor(areaWidth / 2)\n            let ty = randomEntrances[ax + ay * boardWidth][temp][1] * areaHeight + Math.floor(areaHeight / 2)\n            playerPosition[\"x\"] = tx\n            playerPosition[\"y\"] = ty\n            if (Math.floor(tx / areaWidth) === boardWidth - 1 && Math.floor(ty / areaHeight) === boardHeight - 1) win = true\n        }\n        else {\n            playerPosition[\"x\"] = newX\n            playerPosition[\"y\"] = newY\n        }\n        this.setState({\n            playerPosition,\n            prevPlayerPos: prevPos,\n            win\n        })\n        this.countTotalMoves()\n    }\n\n    render() {\n\n        let {\n            playerPosition,\n            randomEntrances,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            totalMoves,\n            win\n        } = this.state\n\n        let status = '*GM Mode* Coordinates: (' + playerPosition[\"x\"] + ', ' + playerPosition[\"y\"] + ') '\n        let temp = Math.floor(playerPosition[\"x\"] / areaWidth) + Math.floor(playerPosition[\"y\"] / areaHeight) * boardWidth\n        status += 'Entrance: '\n        if (randomEntrances[temp]) {\n            for (let i = 0; i < 4; i++) {\n                status += '(' + randomEntrances[temp][i][0] + ', ' + randomEntrances[temp][i][1] + ') '\n            }\n        }\n        if (win) {\n            win = false\n            alert(\"You win! Total moves: \" + totalMoves)\n        }\n\n        return(<div>\n            <div className = \"status\">\n                {status}\n            </div>\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowUp\"\n                onKeyHandle = {\n                    this.handleKeyUp\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowDown\"\n                onKeyHandle = {\n                    this.handleKeyDown\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowRight\"\n                onKeyHandle = {\n                    this.handleKeyRight\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowLeft\"\n                onKeyHandle = {\n                    this.handleKeyLeft\n                }\n            />\n\n            {\n                this.state.showGameBoard &&\n                    ( < GameBoard randomPositions = {\n                            this.state.randomPositions\n                        }\n                        boardWidth = {\n                            this.state.boardWidth\n                        }\n                        boardHeight = {\n                            this.state.boardHeight\n                        }\n                        areaWidth = {\n                            this.state.areaWidth\n                        }\n                        areaHeight = {\n                            this.state.areaHeight\n                        }\n                        playerPosition = {\n                            this.state.playerPosition\n                        }\n                        prevPlayerPos = {\n                            this.state.prevPlayerPos\n                        }\n                        totalMoves = {\n                            this.state.totalMoves\n                        }\n                        />)\n                    } </div>\n            )\n        }\n    }\n\n    export default Game;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction HomeButton({ setMode }) {\r\n\tconst home = () => {\r\n\t\tsetMode(\"Home\");\r\n\t}\r\n\treturn <button size=\"lg\" variant=\"primary\" onClick={home}>Home</button>\r\n}\r\n\r\nexport default HomeButton;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { TopNavbar } from './Navbar'\nimport Menu from './Menu';\nimport Chatroom from './ChatRoom';\nimport RoomList from \"./RoomList\";\nimport GameRoom from './GameRoom';\nimport Game from './Game';\nimport HomeButton from './HomeButton';\n\nfunction App() {\n\tconst [userID, setUserID] = React.useState(sessionStorage.getItem('userID'));\n\tconst [username, setUsername] = React.useState(sessionStorage.getItem('username'));\n\tconst [gameRoomEnter, setGameRoomEnter] = React.useState(null);\n\tconst [gameRoomID, setGameRoomID] = React.useState(null);\n\tconst [mode, setMode] = React.useState(\"Home\");\n\treturn (\n\t\t<div>\n\t\t\t<TopNavbar userID={userID} username={username} setUserID={setUserID} setUsername={setUsername}/>\n\t\t\t{mode === \"Game\"?\n\t\t\t\t<></>\n\t\t\t:\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Chatroom roomid={gameRoomID} userid={userID} name={username} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{gameRoomID !== null?\n\t\t\t\t\t\t\t\t<GameRoom roomid={gameRoomID} roomname={gameRoomEnter} playername={username} playerid={userID} setGameroomenter={setGameRoomEnter} setGameroomid={setGameRoomID}/>\n\t\t\t\t\t\t\t:mode === \"FindingRoom\"?\n\t\t\t\t\t\t\t\t<RoomList user_id={userID} user_name={username} setGameroomenter={setGameRoomEnter} setGameroomid={setGameRoomID}/>\n\t\t\t\t\t\t\t:mode === \"Demo\"?\n\t\t\t\t\t\t\t\t<Game />\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Menu setMode={setMode} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t}\n\t\t\t<HomeButton setMode={setMode}/>\n\t\t</div>\n\t);\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}