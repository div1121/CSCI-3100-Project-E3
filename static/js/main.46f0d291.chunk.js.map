{"version":3,"sources":["Axios.js","Login.js","Profile.js","Navbar.js","service.js","ChatRoom.js","Menu.js","GameBoard.js","Game.js","GameRoom.js","HomeButton.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Register","setUserID","setUsername","name","email","password","register","e","a","preventDefault","canRegister","length","alert","validator","isEmail","post","then","res","data","_id","sessionStorage","setItem","Button","variant","onClick","LoginWithEmail","loginWithEmail","LogoutButton","logout","clear","error","size","LoginForm","React","useState","mode","setMode","setName","setEmail","setPassword","useEffect","className","type","placeholder","value","onChange","target","href","oldMode","LoginButton","show","setShow","Modal","onHide","Header","closeButton","Title","Body","ChangePasswordConfirm","userID","newPassword","reNewPassword","changePassword","canUpdate","ok","ChangePasswordButton","setNewPassword","setReNewPassword","Footer","ProfileButton","username","TopNavbar","Navbar","bg","Brand","Nav","Text","Link","ws","io","SendChat","props","state","roomid","playerid","userid","history","handleChange","bind","handleSubmit","event","checked","this","setState","obj","message","emit","fetch","URLSearchParams","json","on","console","log","his","push","chatlist","i","onSubmit","Component","Match","loading","setLoading","Spinner","animation","role","CustomRoom","Demo","Menu","pressed","start","GameBoard","board","entityStates","entrance","empty","player","setPlayerPosition","setBoard","boardHeight","boardWidth","areaHeight","areaWidth","playerPosition","j","tempArray_1","tempArray_2","y","tempArray_3","x","px","py","Math","floor","nextProps","prevPlayerPos","nx","ny","map","boardRow","area","fontColour","backgroundColour","style","textAlign","verticalAlign","backgroundColor","color","cellSpacing","id","border","width","height","areaRow","cell","Game","win","showGameBoard","randomEntrances","randomPositions","totalMoves","initializeBoardPlayer","startGame","setEntrances","countTotalMoves","handleKeyUp","handleKeyDown","handleKeyRight","handleKeyLeft","makeMove","randomValues","entranceDifferences","temp","targetWidth","random","targetHeight","splice","Number","newX","newY","prevPos","ax","ay","tx","ty","status","keyEventName","KEYDOWN","keyValue","onKeyHandle","Playerline","str","isready","playername","handleready","Gameroom","roomname","player_list","player_id","player_num","ready_num","ready_state","addready","minusready","players","players_ids","num","t","ready","findIndex","element","array","save","list","display","handleleave","HomeButton","App","getItem","Container","fluid","Row","Col","GameRoom","room_name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46f0d291.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: \"https://magic-maze-backend.herokuapp.com\",\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport axios from './Axios';\r\nimport validator from 'validator';\r\n\r\nfunction Register({ setUserID, setUsername, name, email, password }) {\r\n\tconst register = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tvar canRegister = false;\r\n\t\tif(name.length==0) {\r\n\t\t\talert(\"Name is empty!\");\r\n\t\t}else if(email.length==0) {\r\n\t\t\talert(\"Email is empty!\");\r\n\t\t}else if(validator.isEmail(email)==false) {\r\n\t\t\talert(\"Email does not exist!\");\r\n\t\t}else if(password.length==0) {\r\n\t\t\talert(\"Password is empty!\");\r\n\t\t}else if(password.length<8) {\r\n\t\t\talert(\"Password should contain at least 8 letters!\");\r\n\t\t}else try {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\temail: email,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\tcanRegister = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"This email has been used for registration. You may register with another email or login.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(canRegister){\r\n\t\t\t\tawait axios.post(\"/createAccount\", {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tsetUserID(res.data._id);\r\n\t\t\t\t\tsetUsername(res.data.name);\r\n\t\t\t\t\tsessionStorage.setItem('userID', res.data._id);\r\n\t\t\t\t\tsessionStorage.setItem('username', res.data.name);\r\n\t\t\t\t\talert('Register successfully');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant='secondary' onClick={register}>Register</Button>;\r\n}\r\n\r\nfunction LoginWithEmail({ setUserID, setUsername, email, password}) {\r\n\tconst loginWithEmail = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\talert('Invalid email or password');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetUserID(res.data[0]._id);\r\n\t\t\t\t\tsetUsername(res.data[0].name);\r\n\t\t\t\t\tsessionStorage.setItem('userID', res.data[0]._id);\r\n\t\t\t\t\tsessionStorage.setItem('username', res.data[0].name);\r\n\t\t\t\t\talert('Login successfully');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal Error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant='secondary' onClick={loginWithEmail}>Login</Button>;\r\n}\r\n\r\nfunction LogoutButton({ setUserID, setUsername }) {\r\n\tconst logout = async () => {\r\n\t\ttry {\r\n\t\t\tsetUserID(null);\r\n\t\t\tsetUsername(null);\r\n\t\t\tsessionStorage.clear();\r\n\t\t\talert('Logout successfully');\r\n\t\t} catch (error) {\r\n\t\t\talert('Failed to connect');\r\n\t\t}\r\n\t};\r\n\treturn <Button size=\"lg\" variant='secondary' onClick={logout}>Log out</Button>;\r\n}\r\n\r\nfunction LoginForm({ setUserID, setUsername }) {\r\n\tconst [mode, setMode]  = React.useState('Login');\r\n\tconst toggleMode = () => {\r\n\t\tsetMode((oldMode) => (oldMode === 'Login' ? 'Register' : 'Login'));\r\n\t};\r\n\t\r\n\tconst [name, setName] = React.useState('');\r\n\tconst [email, setEmail] = React.useState('');\r\n\tconst [password, setPassword] = React.useState('');\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tsetName('');\r\n\t\tsetEmail('');\r\n\t\tsetPassword('');\r\n\t}, [mode]);\r\n\t\r\n\treturn (\r\n\t\t<div className='login_form'>\r\n\t\t\t{mode === 'Register'?\r\n\t\t\t<input\r\n\t\t\t\ttype = 'name'\r\n\t\t\t\tplaceholder = 'name'\r\n\t\t\t\tvalue = {name}\r\n\t\t\t\tonChange = {(e) => setName(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t:<></>}\r\n\t\t\t<input\r\n\t\t\t\ttype = 'email'\r\n\t\t\t\tplaceholder = 'email'\r\n\t\t\t\tvalue = {email}\r\n\t\t\t\tonChange = {(e) => setEmail(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype = 'password'\r\n\t\t\t\tplaceholder = 'password'\r\n\t\t\t\tvalue = {password}\r\n\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t{mode === 'Login' ? \r\n\t\t\t\t<LoginWithEmail\r\n\t\t\t\t\tsetUserID={setUserID}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\temail={email}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t/>\r\n\t\t\t\t:\r\n\t\t\t\t<Register\r\n\t\t\t\t\tsetUserID={setUserID}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\temail={email}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<span>You may also </span>\r\n\t\t\t\t<a href='#' onClick={() => {toggleMode();}}>\r\n\t\t\t\t\t{mode === 'Login' ? 'register a new account' : 'go to login'}\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction LoginButton({ setUserID, setUsername }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Join us!</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<LoginForm setUserID={setUserID} setUsername={setUsername}/>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport {Register, LoginWithEmail, LogoutButton, LoginForm, LoginButton};","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport axios from './Axios';\r\nimport validator from 'validator';\r\n\r\nfunction ShowProfile({ userID, username }) {\r\n\tconst [show, setShow] = React.useState(true);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tProfile\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Player profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div>Name: {username}</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ChangePasswordConfirm({ userID, password, newPassword, reNewPassword, setShow }) {\r\n\tconst changePassword = async (e) => {\r\n\t\tvar canUpdate = false;\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\t_id: userID,\r\n\t\t\t\tpassword: password,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\talert('Password is wrong');\r\n\t\t\t\t}else if(newPassword.length==0) {\r\n\t\t\t\t\talert(\"New password is empty!\");\r\n\t\t\t\t}else if(newPassword.length<8) {\r\n\t\t\t\t\talert(\"New password should contain at least 8 letters!\");\r\n\t\t\t\t}else if(newPassword!=reNewPassword){\r\n\t\t\t\t\talert(\"Re-entered new password is not same to new password!\");\r\n\t\t\t\t}else {\r\n\t\t\t\t\tcanUpdate = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(canUpdate) {\r\n\t\t\t\tawait axios.post(\"/updateAccount\", {\r\n\t\t\t\t\t_id: userID,\r\n\t\t\t\t\tpassword: newPassword,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif(res.data.ok==1){\r\n\t\t\t\t\t\talert('Password is updated');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetShow(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal Error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant=\"primary\" onClick={changePassword}>Confirm</Button>;\r\n}\r\n\r\nfunction ChangePasswordButton({ userID }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\tconst [password, setPassword] = React.useState(\"\");\r\n\tconst [newPassword, setNewPassword] = React.useState(\"\");\r\n\tconst [reNewPassword, setReNewPassword] = React.useState(\"\");\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetPassword('');\r\n\t\tsetNewPassword('');\r\n\t\tsetReNewPassword('');\r\n\t}, [show]);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"md\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tChange password\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Change password</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\t\t\t\tplaceholder = 'Current password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName = 'form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {newPassword}\r\n\t\t\t\t\t\t\t\tplaceholder = 'New password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName = 'form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {reNewPassword}\r\n\t\t\t\t\t\t\t\tplaceholder = 'Re-enter new password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setReNewPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName='form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<ChangePasswordConfirm userID={userID} password={password} newPassword={newPassword} reNewPassword={reNewPassword} setShow={setShow}/>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ProfileButton({ userID, username, setUsername }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tProfile\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Player profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div>Name: {username}</div>\r\n\t\t\t\t\t<div>Symbol: #</div>\r\n\t\t\t\t\t<div>Game record: </div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<ChangePasswordButton userID={userID} />\r\n\t\t\t\t\t<Button variant=\"primary\">Save changes</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport {ProfileButton};","import { Nav, Navbar, Button, Form, FormControl } from 'react-bootstrap';\r\nimport { LogoutButton, LoginButton } from './Login';\r\nimport { ProfileButton } from './Profile';\r\n\r\nfunction TopNavbar({ userID, username, setUserID, setUsername }) {\r\n\treturn(\r\n\t<div>\r\n\t\t<Navbar className='py-4' bg='dark' variant='dark'>\r\n\t\t\t<Navbar.Brand href=\"https://github.com/luyou00001/CSCI-3100-Project-E3\t\">Magic Maze</Navbar.Brand>\r\n\t\t\t<Nav>\r\n\t\t\t\t<Navbar.Text>• A game created by CSCI3100 Project Group E3</Navbar.Text>\r\n\t\t\t</Nav>\r\n\t\t\t<Nav className='ml-auto'></Nav>\r\n\t\t\t{userID===null?\r\n\t\t\t\t<Nav.Link href='#home'><LoginButton setUserID={setUserID} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t:(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Navbar.Brand>Welcome {username}</Navbar.Brand>\r\n\t\t\t\t\t<Nav.Link href='#home'><ProfileButton userID={userID} username={username} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t\t\t<Nav.Link href='#home'><LogoutButton setUserID={setUserID} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Navbar>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport {TopNavbar};","import io from 'socket.io-client';\r\nconst ws = io(\"http://localhost:9000\");\r\nexport default ws;","import React from 'react';\r\nimport ws from './service';\r\n\r\nclass SendChat extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {roomid:this.props.roomid, playerid:this.props.userid, name:this.props.name, value: '', history: []};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n        let obj = {roomid:this.state.roomid, userid:this.state.playerid, name: this.state.name, message: this.state.value}\r\n        ws.emit('messages',obj);\r\n        this.setState({value: ''});\r\n        event.preventDefault();\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/messages?'+new URLSearchParams({roomid:this.props.roomid}))\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.setState({history:res})\r\n                //console.log(res);\r\n                //console.log(this.props.roomname);\r\n            });\r\n        ws.on('message', message => {\r\n            console.log(message);\r\n            let his = this.state.history;\r\n            his.push(message);\r\n            this.setState({history:his});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        //console.log(this.state.history);\r\n        let history = this.state.history;\r\n        let chatlist = [];\r\n        for (var i=0;i<history.length;i++){\r\n            let name = history[i].name;\r\n            let message = history[i].message;\r\n            chatlist.push(<div>{name}: {message}</div>);\r\n        }\r\n      return (\r\n          <div>\r\n              {chatlist}\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Input Text</label><br></br>\r\n                <textarea name=\"value\" value={this.state.value} placeholder=\"Send a message\" onChange={this.handleChange} />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default SendChat;","import React, { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Match() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst matching = () => {\r\n\t\tsetLoading(!loading);\r\n\t}\r\n\treturn <button className=\"MenuButton\" onClick={matching}>Matching {loading?<Spinner animation=\"border\" role=\"status\" />:<></>}</button>\r\n}\r\n\r\nfunction CustomRoom({ setMode }) {\r\n\tconst customRoom = () => {\r\n\t\tsetMode(\"CustomRoom\");\r\n\t}\r\n\treturn <button className=\"MenuButton\" onClick={customRoom}>Custom room</button>\r\n}\r\n\r\nfunction Demo({ setMode }) {\r\n\tconst demo = () => {\r\n\t\tsetMode(\"Demo\");\r\n\t}\r\n\treturn <button className=\"MenuButton\" onClick={demo}>Demo</button>\r\n}\r\n\r\nfunction Menu({ setMode }) {\r\n\treturn(\r\n\t\t<div className='menu'>\r\n\t\t\t<h1>Menu</h1>\r\n\t\t\t<div>\r\n\t\t\t\t<Match />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CustomRoom setMode={setMode}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Demo setMode={setMode}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Menu;","import React, {\n    Component\n} from 'react';\nimport pressed from \"pressed\"\npressed.start()\n\nclass GameBoard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            board: [],\n            entityStates: {\n                entrance: '╬',\n                empty: '　',\n                player: '♂'\n            }\n        }\n        this.setPlayerPosition = this.setPlayerPosition.bind(this)\n        this.setBoard = this.setBoard.bind(this)\n    }\n    \n    componentWillMount() {\n        let {\n            boardHeight,\n            boardWidth,\n            areaHeight,\n            areaWidth,\n            playerPosition\n        } = this.props\n        let board = []\n        for (let j = 0; j < boardHeight; j++) {\n            let tempArray_1 = []\n            for (let i = 0; i < boardWidth; i++) {\n                let tempArray_2 = []\n                for (let y = 0; y < areaHeight; y++) {\n                    let tempArray_3 = []\n                    for (let x = 0; x < areaWidth; x++) {                        \n                        if ((x === 0 && y === 0) || (x === areaWidth - 1 && y === 0) || (x === areaWidth - 1 && y === areaHeight - 1) || (x === 0 && y === areaHeight - 1)) {\n                            tempArray_3.push(this.state.entityStates.entrance)\n                        } else if (playerPosition.x === i * areaWidth + x && playerPosition.y === j * areaHeight + y) {\n                            tempArray_3.push(this.state.entityStates.player)\n                        } else {\n                            tempArray_3.push(this.state.entityStates.empty)\n                        }\n                    }\n                    tempArray_2.push(tempArray_3)\n                }\n                tempArray_1.push(tempArray_2)\n            }\n            board.push(tempArray_1)\n        }\n        this.setState({\n            board: board,\n            areaHeight,\n            areaWidth,\n            playerPosition\n        }, () => {\n            this.setPlayerPosition(playerPosition)\n        })\n    }\n\n    setPlayerPosition(playerPosition) {\n        let {\n            board,\n            areaHeight,\n            areaWidth\n        } = this.state\n        let px = playerPosition.x, py = playerPosition.y\n        board[Math.floor(py / areaHeight)][Math.floor(px / areaWidth)][py % areaHeight][px % areaWidth] = this.state.entityStates.player\n        this.setState({\n            board\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps === this.props) {} else {\n            this.setBoard(nextProps)\n        }\n    }\n\n    setBoard(props) {\n        let {\n            playerPosition,\n            prevPlayerPos,\n            areaHeight,\n            areaWidth\n        } = props\n        let {\n            board\n        } = this.state\n        let px = prevPlayerPos.x, py = prevPlayerPos.y\n        let nx = playerPosition.x, ny = playerPosition.y\n        board[Math.floor(py / areaHeight)][Math.floor(px / areaWidth)][py % areaHeight][px % areaWidth] = this.state.entityStates.empty\n        board[Math.floor(ny / areaHeight)][Math.floor(nx / areaWidth)][ny % areaHeight][nx % areaWidth] = this.state.entityStates.player\n        this.setState({\n            board: board,\n            playerPosition\n        }, () => {\n            this.setPlayerPosition(playerPosition)\n        })\n    }\n\n    render() {\n        let {\n            board\n        } = this.state\n        console.log(board);\n        return(\n            <div>\n                {board.map(function(boardRow, i) {\n                return (\n                    <tr>\n                    {boardRow.map(function(area, j) {\n                        let fontColour = \"blue\"\n                        let backgroundColour = \"yellow\"\n                        if ((i + j) % 2 == 0) {\n                            fontColour = \"yellow\"\n                            backgroundColour = \"blue\"\n                        }\n                        return (\n                            <td\n                                style = {\n                                    {\n                                        textAlign: \"center\",\n                                        verticalAlign: \"middle\",\n                                        backgroundColor: backgroundColour,\n                                        color: fontColour\n                                    }\n                                }\n                            >\n                            <table\n                                className = \"area\"\n                                cellSpacing = \"0\"\n                                id = \"table\"\n                                border = \"3px\"\n                                width = \"100\"\n                                height = \"100\"\n                                textAlign = \"center\"\n                            >\n                                <tbody>\n                                    {area.map(function(areaRow) {\n                                    return (\n                                        <tr>\n                                        {areaRow.map(function(cell) {\n                                            return ( \n                                            <td className = \"area\">\n                                                {cell}\n                                                </td>\n                                            )\n                                        })}\n                                        </tr>\n                                    );\n                                    })}\n                                </tbody>\n                            </table>\n                            </td>\n                        )\n                    })}\n                    </tr>\n                );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default GameBoard","import React, {\n    Component\n} from 'react';\nimport GameBoard from './GameBoard'\nimport _ from 'lodash'\nimport KeyHandler, {KEYDOWN} from 'react-key-handler';\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            win: false,\n            showGameBoard: false,\n            boardHeight: 0,\n            boardWidth: 0,\n            areaHeight: 0,\n            areaWidth: 0,\n            randomEntrances: [],\n            randomPositions: [],\n            playerPosition: {\n                x: 0,\n                y: 0\n            },\n            prevPlayerPos: {\n                x: 0,\n                y: 0\n            },\n            totalMoves: 0\n        }\n        this.initializeBoardPlayer = this.initializeBoardPlayer.bind(this)\n        this.startGame = this.startGame.bind(this)\n        this.setEntrances = this.setEntrances.bind(this)\n        this.countTotalMoves = this.countTotalMoves.bind(this)\n        this.handleKeyUp = this.handleKeyUp.bind(this)\n        this.handleKeyDown = this.handleKeyDown.bind(this)\n        this.handleKeyRight = this.handleKeyRight.bind(this)\n        this.handleKeyLeft = this.handleKeyLeft.bind(this)\n        this.makeMove = this.makeMove.bind(this)\n    }\n\n    componentWillMount() {\n        this.initializeBoardPlayer()\n    }\n\n    initializeBoardPlayer() {\n        // TODO\n        let boardWidth = 5\n        let boardHeight = 5\n        let areaWidth = 5\n        let areaHeight = 5\n        let playerPosition = {\n            x: Math.floor(areaWidth / 2),\n            y: Math.floor(areaHeight / 2)\n        }\n        let prevPlayerPos = {\n            x: Math.floor(areaWidth / 2),\n            y: Math.floor(areaHeight / 2)\n        }\n        this.setState({\n            boardHeight,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            playerPosition,\n            prevPlayerPos,\n            showGameBoard: true\n        }, () => {\n            this.startGame()\n        })\n    }\n\n    startGame() {\n        this.setEntrances()\n    }\n\n    setEntrances() {\n        let {\n            randomEntrances,\n            boardHeight,\n            boardWidth\n        } = this.state\n        let randomValues\n        for (let i = 0; i < boardHeight; i++) {\n            for (let j = 0; j < boardWidth; j++) {\n                randomEntrances.push([])\n                let entranceDifferences = [[1, -1], [1, 0], [0, 1], [-1, 1]]\n                let temp = 4\n                while (temp > 0) {\n                    randomValues = Math.floor(Math.random() * temp)\n                    let targetWidth = j + entranceDifferences[randomValues][0]\n                    let targetHeight = i + entranceDifferences[randomValues][1]\n                    if (targetWidth < 0 || targetWidth >= boardHeight || targetHeight < 0 || targetHeight >= boardHeight) {\n                        randomEntrances[j + i * boardWidth].push([])\n                        randomEntrances[j + i * boardWidth][4 - temp].push(j)\n                        randomEntrances[j + i * boardWidth][4 - temp].push(i)\n                    }\n                    else {\n                        randomEntrances[j + i * boardWidth].push([])\n                        randomEntrances[j + i * boardWidth][4 - temp].push(targetWidth)\n                        randomEntrances[j + i * boardWidth][4 - temp].push(targetHeight)\n                    }\n                    temp--\n                    entranceDifferences.splice(randomValues, 1)\n                }\n            }\n        }\n        this.setState({\n            randomEntrances\n        })\n    }\n\n    countTotalMoves() {\n        this.setState({\n            totalMoves: ++this.state.totalMoves\n        })\n    }\n\n    handleKeyUp(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaHeight\n        } = this.state\n        if (Number(playerPosition.y) % areaHeight - 1 >= 0) this.makeMove(playerPosition.x, playerPosition.y - 1)\n    }\n\n    handleKeyDown(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaHeight\n        } = this.state\n        if (Number(playerPosition.y) % areaHeight + 1 < areaHeight) this.makeMove(playerPosition.x, playerPosition.y + 1)\n    }\n\n    handleKeyRight(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaWidth\n        } = this.state\n        if (Number(playerPosition.x) % areaWidth + 1 < areaWidth) this.makeMove(playerPosition.x + 1, playerPosition.y)\n    }\n\n    handleKeyLeft(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaWidth\n        } = this.state\n        if (Number(playerPosition.x) % areaWidth - 1 >= 0) this.makeMove(playerPosition.x - 1, playerPosition.y)\n    }\n\n    makeMove(newX, newY) {\n        let {\n            playerPosition,\n            randomEntrances,\n            boardHeight,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            win\n        } = this.state\n        let prevPos = {\n            x: playerPosition.x,\n            y: playerPosition.y\n        }\n        let x = newX % areaWidth\n        let y = newY % areaHeight\n        if ((x === 0 && y === 0) || (x === areaWidth - 1 && y === 0) || (x === areaWidth - 1 && y === areaHeight - 1) || (x === 0 && y === areaHeight - 1)) {\n            let temp\n            if (x === 0 && y === 0) temp = 0\n            else if (x === areaWidth - 1 && y === 0) temp = 1\n            else if (x === areaWidth - 1 && y === areaHeight - 1) temp = 2\n            else temp = 3\n            let ax = Math.floor(newX / areaWidth), ay = Math.floor(newY / areaHeight)\n            let tx = randomEntrances[ax + ay * boardWidth][temp][0] * areaWidth + Math.floor(areaWidth / 2)\n            let ty = randomEntrances[ax + ay * boardWidth][temp][1] * areaHeight + Math.floor(areaHeight / 2)\n            playerPosition[\"x\"] = tx\n            playerPosition[\"y\"] = ty\n            if (Math.floor(tx / areaWidth) === boardWidth - 1 && Math.floor(ty / areaHeight) === boardHeight - 1) win = true\n        }\n        else {\n            playerPosition[\"x\"] = newX\n            playerPosition[\"y\"] = newY\n        }\n        this.setState({\n            playerPosition,\n            prevPlayerPos: prevPos,\n            win\n        })\n        this.countTotalMoves()\n    }\n\n    render() {\n\n        let {\n            playerPosition,\n            randomEntrances,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            totalMoves,\n            win\n        } = this.state\n\n        let status = '*GM Mode* Coordinates: (' + playerPosition[\"x\"] + ', ' + playerPosition[\"y\"] + ') '\n        let temp = Math.floor(playerPosition[\"x\"] / areaWidth) + Math.floor(playerPosition[\"y\"] / areaHeight) * boardWidth\n        status += 'Entrance: '\n        if (randomEntrances[temp]) {\n            for (let i = 0; i < 4; i++) {\n                status += '(' + randomEntrances[temp][i][0] + ', ' + randomEntrances[temp][i][1] + ') '\n            }\n        }\n        if (win) {\n            win = false\n            alert(\"You win! Total moves: \" + totalMoves)\n        }\n\n        return(<div>\n            <div className = \"status\">\n                {status}\n            </div>\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowUp\"\n                onKeyHandle = {\n                    this.handleKeyUp\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowDown\"\n                onKeyHandle = {\n                    this.handleKeyDown\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowRight\"\n                onKeyHandle = {\n                    this.handleKeyRight\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowLeft\"\n                onKeyHandle = {\n                    this.handleKeyLeft\n                }\n            />\n\n            {\n                this.state.showGameBoard &&\n                    ( < GameBoard randomPositions = {\n                            this.state.randomPositions\n                        }\n                        boardWidth = {\n                            this.state.boardWidth\n                        }\n                        boardHeight = {\n                            this.state.boardHeight\n                        }\n                        areaWidth = {\n                            this.state.areaWidth\n                        }\n                        areaHeight = {\n                            this.state.areaHeight\n                        }\n                        playerPosition = {\n                            this.state.playerPosition\n                        }\n                        prevPlayerPos = {\n                            this.state.prevPlayerPos\n                        }\n                        totalMoves = {\n                            this.state.totalMoves\n                        }\n                        />)\n                    } </div>\n            )\n        }\n    }\n\n    export default Game;","import React, { Component } from 'react';\r\nimport ws from './service';\r\n\r\n//member\r\nclass Playerline extends Component{\r\n    render(){\r\n        let str = \"Ready\"\r\n        if (this.props.isready){\r\n            str = \"Cancel\"\r\n        }\r\n        return (<tr>\r\n            <td>\r\n                {this.props.playername}\r\n            </td>\r\n                {\r\n                    this.props.handleready != null &&\r\n                    <td>\r\n                        <button onClick={this.props.handleready}>{str}</button>\r\n                    </td>\r\n                }\r\n            </tr>\r\n            )\r\n    }\r\n}\r\n\r\n// Class Chatroom (to be imported)\r\n\r\nclass Gameroom extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {roomid:this.props.roomid, roomname: this.props.roomname, player_list: [], player_id: [], player_num: 0, ready_num: 0 ,ready_state: []};\r\n        this.addready = this.addready.bind(this);\r\n        this.minusready = this.minusready.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/roommember?'+new URLSearchParams({roomid:this.props.roomid}))\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                let players = this.state.player_list;\r\n                let players_ids = this.state.player_id;\r\n                let num = this.state.player_num;\r\n                let t = this.state.ready_num;\r\n                let ready = this.state.ready_state;\r\n                // console.log(res.length);\r\n                // console.log(res);\r\n                for (var i=0;i<res.length;i++){\r\n                    players.push(res[i].name);\r\n                    players_ids.push(res[i].userid);\r\n                    num++;\r\n                    ready.push(res[i].ready);\r\n                    if (res[i].ready)\r\n                        t++;\r\n                }\r\n                // console.log(\"How are you\")\r\n                // console.log(res);\r\n                this.setState({player_list:players, player_id:players_ids,player_num:num, ready_num:t, ready_state:ready});\r\n            });\r\n        ws.on('addroommember', data =>{\r\n            let players = this.state.player_list;\r\n            let players_ids = this.state.player_id;\r\n            let num = this.state.player_num;\r\n            let ready = this.state.ready_state;\r\n            players.push(data.name);\r\n            players_ids.push(data.userid);\r\n            num = num + 1;\r\n            ready.push(false);\r\n            this.setState({player_list:players, player_id:players_ids, player_num:num,ready_state:ready});\r\n        });\r\n\r\n        ws.on('readychange', data => {\r\n            this.setState({ready_num: data.ready_num, ready_state:data.ready_state});\r\n        });\r\n\r\n        ws.on('decreaseroommember', data =>{\r\n            let players = this.state.player_list;\r\n            let players_ids = this.state.player_id;\r\n            let num = this.state.player_num;\r\n            let ready = this.state.ready_state;\r\n            let t = this.state.ready_num;\r\n            const isMatch = (element) => element === data.userid;\r\n            let temp = players_ids.findIndex(isMatch);\r\n            //console.log(players_ids);\r\n            //console.log(data);\r\n            //console.log(temp);\r\n            if (ready[temp])\r\n                t-=1;\r\n            num = num - 1;\r\n            players.splice(temp,1);\r\n            ready.splice(temp,1);\r\n            players_ids.splice(temp,1);\r\n            this.setState({player_list:players, player_id:players_ids, player_num:num,ready_num:t,ready_state:ready});\r\n        });\r\n    }\r\n\r\n    addready(i){\r\n        let array = this.state.ready_state;\r\n        array[i] = true;\r\n        let ready_num = this.state.ready_num + 1;\r\n        ws.emit('readychange',{roomid:this.state.roomid, userid:this.props.playerid, ready_num: ready_num, ready_state:array, save:true})\r\n    }\r\n\r\n    minusready(i){\r\n        let array = this.state.ready_state;\r\n        array[i] = false;\r\n        let ready_num = this.state.ready_num - 1;\r\n        ws.emit('readychange',{roomid:this.state.roomid, userid:this.props.playerid, ready_num: ready_num, ready_state:array, save:false})\r\n    }\r\n\r\n    //invite button function for each player (to be implemented)\r\n    render(){\r\n        let list = [];\r\n        for (let i=0;i<this.state.player_num;i++){\r\n            if (this.state.player_id[i]===this.props.playerid) {\r\n                if (this.state.ready_state[i])\r\n                    list.push(() => this.minusready(i));\r\n                else list.push(() => this.addready(i));\r\n            }\r\n            else{\r\n                list.push(null);\r\n            }\r\n        }\r\n        let display = [];\r\n        for (let i=0;i<this.state.player_num;i++){\r\n            display.push(<Playerline isready={this.state.ready_state[i]}\r\n                                     playername={this.state.player_list[i]} handleready={list[i]}/>);\r\n        }\r\n        return (<div>\r\n            <h1>{this.props.roomname}</h1>\r\n            <table>\r\n                {display}\r\n            </table>\r\n            <h2>Number of ready: {this.state.ready_num}</h2>\r\n            <button onClick={this.props.handleleave}>Leave</button>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Gameroom;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction HomeButton({ setMode }) {\r\n\tconst home = () => {\r\n\t\tsetMode(\"Home\");\r\n\t}\r\n\treturn <Button size=\"lg\" variant=\"primary\" onClick={home}>Home</Button>\r\n}\r\n\r\nexport default HomeButton;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { TopNavbar } from './Navbar'\nimport Chatroom from './ChatRoom';\nimport Menu from './Menu';\nimport Game from './Game';\nimport GameRoom from './GameRoom';\nimport HomeButton from './HomeButton';\n\nfunction App() {\n\tconst [userID, setUserID] = React.useState(sessionStorage.getItem('userID'));\n\tconst [username, setUsername] = React.useState(sessionStorage.getItem('username'));\n\tconst [mode, setMode] = React.useState(\"Home\");\n\treturn (\n\t\t<div>\n\t\t\t<TopNavbar userID={userID} username={username} setUserID={setUserID} setUsername={setUsername}/>\n\t\t\t{mode === \"Home\"?\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col><Chatroom /></Col>\n\t\t\t\t\t\t<Col><Menu setMode={setMode} /></Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t:mode === \"Demo\"?\n\t\t\t\t<Game />\n\t\t\t:mode === \"CustomRoom\"?\n\t\t\t\t<GameRoom room_name={\"Game1\"} player_list={[\"Paul\",\"Alice\",\"Sun\",\"Jason\"]} player_num={4}/>\n\t\t\t:\n\t\t\t\t<></>\n\t\t\t}\n\t\t\t<HomeButton setMode={setMode}/>\n\t\t</div>\n\t);\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}