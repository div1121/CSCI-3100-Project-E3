{"version":3,"sources":["Axios.js","Login.js","Profile.js","Navbar.js","ChatRoom.js","GameBoard.js","Game.js","GameRoom.js","Menu.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Register","setUserID","setUsername","name","email","password","register","e","a","preventDefault","canRegister","length","alert","validator","isEmail","post","then","res","data","_id","sessionStorage","setItem","Button","variant","onClick","LoginWithEmail","loginWithEmail","LogoutButton","logout","clear","error","size","LoginForm","React","useState","mode","setMode","setName","setEmail","setPassword","useEffect","className","type","placeholder","value","onChange","target","href","oldMode","LoginButton","show","setShow","Modal","onHide","Header","closeButton","Title","Body","ChangePasswordConfirm","userID","newPassword","reNewPassword","changePassword","canUpdate","ok","ChangePasswordButton","setNewPassword","setReNewPassword","Footer","ProfileButton","username","TopNavbar","Navbar","bg","Brand","Nav","Text","Link","ChatRoom","Component","pressed","start","GameBoard","props","state","board","entityStates","entrance","empty","player","setPlayerPosition","bind","setBoard","this","boardHeight","boardWidth","areaHeight","areaWidth","playerPosition","j","tempArray_1","i","tempArray_2","y","tempArray_3","x","push","setState","px","py","Math","floor","nextProps","prevPlayerPos","nx","ny","console","log","map","boardRow","area","fontColour","backgroundColour","style","textAlign","verticalAlign","backgroundColor","color","cellSpacing","id","border","width","height","areaRow","cell","Game","win","showGameBoard","randomEntrances","randomPositions","totalMoves","initializeBoardPlayer","startGame","setEntrances","countTotalMoves","handleKeyUp","handleKeyDown","handleKeyRight","handleKeyLeft","makeMove","randomValues","entranceDifferences","temp","targetWidth","random","targetHeight","splice","Number","newX","newY","prevPos","ax","ay","tx","ty","status","keyEventName","KEYDOWN","keyValue","onKeyHandle","Playerline","str","isready","playername","handleready","Gameroom","room_name","roomname","player_list","player_num","ready_num","ready_state","Array","fill","addready","minusready","array","list","Demo","CustomRoom","Menu","GameRoom","App","getItem","Container","fluid","Row","Col","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0394026.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: \"https://magic-maze-backend.herokuapp.com\",\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport axios from './Axios';\r\nimport validator from 'validator';\r\n\r\nfunction Register({ setUserID, setUsername, name, email, password }) {\r\n\tconst register = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tvar canRegister = false;\r\n\t\tif(name.length==0) {\r\n\t\t\talert(\"Name is empty!\");\r\n\t\t}else if(email.length==0) {\r\n\t\t\talert(\"Email is empty!\");\r\n\t\t}else if(validator.isEmail(email)==false) {\r\n\t\t\talert(\"Email does not exist!\");\r\n\t\t}else if(password.length==0) {\r\n\t\t\talert(\"Password is empty!\");\r\n\t\t}else if(password.length<8) {\r\n\t\t\talert(\"Password should contain at least 8 letters!\");\r\n\t\t}else try {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\temail: email,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\tcanRegister = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"This email has been used for registration. You may register with another email or login.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(canRegister){\r\n\t\t\t\tawait axios.post(\"/createAccount\", {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tsetUserID(res.data._id);\r\n\t\t\t\t\tsetUsername(res.data.name);\r\n\t\t\t\t\tsessionStorage.setItem('userID', res.data[0]._id);\r\n\t\t\t\t\tsessionStorage.setItem('username', res.data[0].name);\r\n\t\t\t\t\talert('Register successfully');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant='secondary' onClick={register}>Register</Button>;\r\n}\r\n\r\nfunction LoginWithEmail({ setUserID, setUsername, email, password}) {\r\n\tconst loginWithEmail = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\talert('Invalid email or password');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetUserID(res.data[0]._id);\r\n\t\t\t\t\tsetUsername(res.data[0].name);\r\n\t\t\t\t\tsessionStorage.setItem('userID', res.data[0]._id);\r\n\t\t\t\t\tsessionStorage.setItem('username', res.data[0].name);\r\n\t\t\t\t\talert('Login successfully');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal Error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant='secondary' onClick={loginWithEmail}>Login</Button>;\r\n}\r\n\r\nfunction LogoutButton({ setUserID, setUsername }) {\r\n\tconst logout = async () => {\r\n\t\ttry {\r\n\t\t\tsetUserID(null);\r\n\t\t\tsetUsername(null);\r\n\t\t\tsessionStorage.clear();\r\n\t\t\talert('Logout successfully');\r\n\t\t} catch (error) {\r\n\t\t\talert('Failed to connect');\r\n\t\t}\r\n\t};\r\n\treturn <Button size=\"lg\" variant='secondary' onClick={logout}>Log out</Button>;\r\n}\r\n\r\nfunction LoginForm({ setUserID, setUsername }) {\r\n\tconst [mode, setMode]  = React.useState('Login');\r\n\tconst toggleMode = () => {\r\n\t\tsetMode((oldMode) => (oldMode === 'Login' ? 'Register' : 'Login'));\r\n\t};\r\n\t\r\n\tconst [name, setName] = React.useState('');\r\n\tconst [email, setEmail] = React.useState('');\r\n\tconst [password, setPassword] = React.useState('');\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tsetName('');\r\n\t\tsetEmail('');\r\n\t\tsetPassword('');\r\n\t}, [mode]);\r\n\t\r\n\treturn (\r\n\t\t<div className='login_form'>\r\n\t\t\t{mode === 'Register'?\r\n\t\t\t<input\r\n\t\t\t\ttype = 'name'\r\n\t\t\t\tplaceholder = 'name'\r\n\t\t\t\tvalue = {name}\r\n\t\t\t\tonChange = {(e) => setName(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t:<></>}\r\n\t\t\t<input\r\n\t\t\t\ttype = 'email'\r\n\t\t\t\tplaceholder = 'email'\r\n\t\t\t\tvalue = {email}\r\n\t\t\t\tonChange = {(e) => setEmail(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype = 'password'\r\n\t\t\t\tplaceholder = 'password'\r\n\t\t\t\tvalue = {password}\r\n\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\tclassName='form_input'\r\n\t\t\t/>\r\n\t\t\t{mode === 'Login' ? \r\n\t\t\t\t<LoginWithEmail\r\n\t\t\t\t\tsetUserID={setUserID}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\temail={email}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t/>\r\n\t\t\t\t:\r\n\t\t\t\t<Register\r\n\t\t\t\t\tsetUserID={setUserID}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\temail={email}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<span>You may also </span>\r\n\t\t\t\t<a href='#' onClick={() => {toggleMode();}}>\r\n\t\t\t\t\t{mode === 'Login' ? 'register a new account' : 'go to login'}\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction LoginButton({ setUserID, setUsername }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Join us!</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<LoginForm setUserID={setUserID} setUsername={setUsername}/>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport {Register, LoginWithEmail, LogoutButton, LoginForm, LoginButton};","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport axios from './Axios';\r\nimport validator from 'validator';\r\n\r\nfunction ShowProfile({ userID, username }) {\r\n\tconst [show, setShow] = React.useState(true);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tProfile\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Player profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div>Name: {username}</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ChangePasswordConfirm({ userID, password, newPassword, reNewPassword, setShow }) {\r\n\tconst changePassword = async (e) => {\r\n\t\tvar canUpdate = false;\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"/loginAccount\", {\r\n\t\t\t\t_id: userID,\r\n\t\t\t\tpassword: password,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif(res.data.length==0){\r\n\t\t\t\t\talert('Password is wrong');\r\n\t\t\t\t}else if(newPassword.length==0) {\r\n\t\t\t\t\talert(\"New password is empty!\");\r\n\t\t\t\t}else if(newPassword.length<8) {\r\n\t\t\t\t\talert(\"New password should contain at least 8 letters!\");\r\n\t\t\t\t}else if(newPassword!=reNewPassword){\r\n\t\t\t\t\talert(\"Re-entered new password is not same to new password!\");\r\n\t\t\t\t}else {\r\n\t\t\t\t\tcanUpdate = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(canUpdate) {\r\n\t\t\t\tawait axios.post(\"/updateAccount\", {\r\n\t\t\t\t\t_id: userID,\r\n\t\t\t\t\tpassword: newPassword,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif(res.data.ok==1){\r\n\t\t\t\t\t\talert('Password is updated');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetShow(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\talert('Internal Error');\r\n\t\t}\r\n\t};\r\n\treturn <Button variant=\"primary\" onClick={changePassword}>Confirm</Button>;\r\n}\r\n\r\nfunction ChangePasswordButton({ userID }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\tconst [password, setPassword] = React.useState(\"\");\r\n\tconst [newPassword, setNewPassword] = React.useState(\"\");\r\n\tconst [reNewPassword, setReNewPassword] = React.useState(\"\");\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetPassword('');\r\n\t\tsetNewPassword('');\r\n\t\tsetReNewPassword('');\r\n\t}, [show]);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"md\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tChange password\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Change password</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\t\t\t\tplaceholder = 'Current password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName = 'form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {newPassword}\r\n\t\t\t\t\t\t\t\tplaceholder = 'New password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName = 'form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\t\t\tvalue = {reNewPassword}\r\n\t\t\t\t\t\t\t\tplaceholder = 'Re-enter new password'\r\n\t\t\t\t\t\t\t\tonChange = {(e) => setReNewPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName='form_input'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<ChangePasswordConfirm userID={userID} password={password} newPassword={newPassword} reNewPassword={reNewPassword} setShow={setShow}/>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ProfileButton({ userID, username, setUsername }) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\t\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button size=\"lg\" variant='secondary' onClick={handleShow}>\r\n\t\t\t\tProfile\r\n\t\t\t</Button>\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Player profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div>Name: {username}</div>\r\n\t\t\t\t\t<div>Symbol: #</div>\r\n\t\t\t\t\t<div>Game record: </div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<ChangePasswordButton userID={userID} />\r\n\t\t\t\t\t<Button variant=\"primary\">Save changes</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport {ProfileButton};","import { Nav, Navbar, Button, Form, FormControl } from 'react-bootstrap';\r\nimport { LogoutButton, LoginButton } from './Login'\r\nimport { ProfileButton } from './Profile'\r\n\r\nfunction TopNavbar({ userID, username, setUserID, setUsername }) {\r\n\treturn(\r\n\t<div>\r\n\t\t<Navbar className='py-4' bg='dark' variant='dark'>\r\n\t\t\t<Navbar.Brand href=\"https://github.com/luyou00001/CSCI-3100-Project-E3\t\">Magic Maze</Navbar.Brand>\r\n\t\t\t<Nav>\r\n\t\t\t\t<Navbar.Text>• A game created by CSCI3100 Project Group E3</Navbar.Text>\r\n\t\t\t</Nav>\r\n\t\t\t<Nav className='ml-auto'></Nav>\r\n\t\t\t{userID===null?\r\n\t\t\t\t<Nav.Link href='#home'><LoginButton setUserID={setUserID} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t:(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Navbar.Brand>Welcome {username}</Navbar.Brand>\r\n\t\t\t\t\t<Nav.Link href='#home'><ProfileButton userID={userID} username={username} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t\t\t<Nav.Link href='#home'><LogoutButton setUserID={setUserID} setUsername={setUsername}/></Nav.Link>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Navbar>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport {TopNavbar};","import React from 'react';\r\n\r\nclass ChatRoom extends React.Component {\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div className='chat_room'>\r\n\t\t\t\t<h1>Chat room</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChatRoom;","import React, {\n    Component\n} from 'react';\nimport pressed from \"pressed\"\npressed.start()\n\nclass GameBoard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            board: [],\n            entityStates: {\n                entrance: '╬',\n                empty: '　',\n                player: '♂'\n            }\n        }\n        this.setPlayerPosition = this.setPlayerPosition.bind(this)\n        this.setBoard = this.setBoard.bind(this)\n    }\n    \n    componentWillMount() {\n        let {\n            boardHeight,\n            boardWidth,\n            areaHeight,\n            areaWidth,\n            playerPosition\n        } = this.props\n        let board = []\n        for (let j = 0; j < boardHeight; j++) {\n            let tempArray_1 = []\n            for (let i = 0; i < boardWidth; i++) {\n                let tempArray_2 = []\n                for (let y = 0; y < areaHeight; y++) {\n                    let tempArray_3 = []\n                    for (let x = 0; x < areaWidth; x++) {                        \n                        if ((x === 0 && y === 0) || (x === areaWidth - 1 && y === 0) || (x === areaWidth - 1 && y === areaHeight - 1) || (x === 0 && y === areaHeight - 1)) {\n                            tempArray_3.push(this.state.entityStates.entrance)\n                        } else if (playerPosition.x === i * areaWidth + x && playerPosition.y === j * areaHeight + y) {\n                            tempArray_3.push(this.state.entityStates.player)\n                        } else {\n                            tempArray_3.push(this.state.entityStates.empty)\n                        }\n                    }\n                    tempArray_2.push(tempArray_3)\n                }\n                tempArray_1.push(tempArray_2)\n            }\n            board.push(tempArray_1)\n        }\n        this.setState({\n            board: board,\n            areaHeight,\n            areaWidth,\n            playerPosition\n        }, () => {\n            this.setPlayerPosition(playerPosition)\n        })\n    }\n\n    setPlayerPosition(playerPosition) {\n        let {\n            board,\n            areaHeight,\n            areaWidth\n        } = this.state\n        let px = playerPosition.x, py = playerPosition.y\n        board[Math.floor(py / areaHeight)][Math.floor(px / areaWidth)][py % areaHeight][px % areaWidth] = this.state.entityStates.player\n        this.setState({\n            board\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps === this.props) {} else {\n            this.setBoard(nextProps)\n        }\n    }\n\n    setBoard(props) {\n        let {\n            playerPosition,\n            prevPlayerPos,\n            areaHeight,\n            areaWidth\n        } = props\n        let {\n            board\n        } = this.state\n        let px = prevPlayerPos.x, py = prevPlayerPos.y\n        let nx = playerPosition.x, ny = playerPosition.y\n        board[Math.floor(py / areaHeight)][Math.floor(px / areaWidth)][py % areaHeight][px % areaWidth] = this.state.entityStates.empty\n        board[Math.floor(ny / areaHeight)][Math.floor(nx / areaWidth)][ny % areaHeight][nx % areaWidth] = this.state.entityStates.player\n        this.setState({\n            board: board,\n            playerPosition\n        }, () => {\n            this.setPlayerPosition(playerPosition)\n        })\n    }\n\n    render() {\n        let {\n            board\n        } = this.state\n        console.log(board);\n        return(\n            <div>\n                {board.map(function(boardRow, i) {\n                return (\n                    <tr>\n                    {boardRow.map(function(area, j) {\n                        let fontColour = \"blue\"\n                        let backgroundColour = \"yellow\"\n                        if ((i + j) % 2 == 0) {\n                            fontColour = \"yellow\"\n                            backgroundColour = \"blue\"\n                        }\n                        return (\n                            <td\n                                style = {\n                                    {\n                                        textAlign: \"center\",\n                                        verticalAlign: \"middle\",\n                                        backgroundColor: backgroundColour,\n                                        color: fontColour\n                                    }\n                                }\n                            >\n                            <table\n                                className = \"area\"\n                                cellSpacing = \"0\"\n                                id = \"table\"\n                                border = \"3px\"\n                                width = \"100\"\n                                height = \"100\"\n                                textAlign = \"center\"\n                            >\n                                <tbody>\n                                    {area.map(function(areaRow) {\n                                    return (\n                                        <tr>\n                                        {areaRow.map(function(cell) {\n                                            return ( \n                                            <td className = \"area\">\n                                                {cell}\n                                                </td>\n                                            )\n                                        })}\n                                        </tr>\n                                    );\n                                    })}\n                                </tbody>\n                            </table>\n                            </td>\n                        )\n                    })}\n                    </tr>\n                );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default GameBoard","import React, {\n    Component\n} from 'react';\nimport GameBoard from './GameBoard'\nimport _ from 'lodash'\nimport KeyHandler, {KEYDOWN} from 'react-key-handler';\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            win: false,\n            showGameBoard: false,\n            boardHeight: 0,\n            boardWidth: 0,\n            areaHeight: 0,\n            areaWidth: 0,\n            randomEntrances: [],\n            randomPositions: [],\n            playerPosition: {\n                x: 0,\n                y: 0\n            },\n            prevPlayerPos: {\n                x: 0,\n                y: 0\n            },\n            totalMoves: 0\n        }\n        this.initializeBoardPlayer = this.initializeBoardPlayer.bind(this)\n        this.startGame = this.startGame.bind(this)\n        this.setEntrances = this.setEntrances.bind(this)\n        this.countTotalMoves = this.countTotalMoves.bind(this)\n        this.handleKeyUp = this.handleKeyUp.bind(this)\n        this.handleKeyDown = this.handleKeyDown.bind(this)\n        this.handleKeyRight = this.handleKeyRight.bind(this)\n        this.handleKeyLeft = this.handleKeyLeft.bind(this)\n        this.makeMove = this.makeMove.bind(this)\n    }\n\n    componentWillMount() {\n        this.initializeBoardPlayer()\n    }\n\n    initializeBoardPlayer() {\n        // TODO\n        let boardWidth = 5\n        let boardHeight = 5\n        let areaWidth = 5\n        let areaHeight = 5\n        let playerPosition = {\n            x: Math.floor(areaWidth / 2),\n            y: Math.floor(areaHeight / 2)\n        }\n        let prevPlayerPos = {\n            x: Math.floor(areaWidth / 2),\n            y: Math.floor(areaHeight / 2)\n        }\n        this.setState({\n            boardHeight,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            playerPosition,\n            prevPlayerPos,\n            showGameBoard: true\n        }, () => {\n            this.startGame()\n        })\n    }\n\n    startGame() {\n        this.setEntrances()\n    }\n\n    setEntrances() {\n        let {\n            randomEntrances,\n            boardHeight,\n            boardWidth\n        } = this.state\n        let randomValues\n        for (let i = 0; i < boardHeight; i++) {\n            for (let j = 0; j < boardWidth; j++) {\n                randomEntrances.push([])\n                let entranceDifferences = [[1, -1], [1, 0], [0, 1], [-1, 1]]\n                let temp = 4\n                while (temp > 0) {\n                    randomValues = Math.floor(Math.random() * temp)\n                    let targetWidth = j + entranceDifferences[randomValues][0]\n                    let targetHeight = i + entranceDifferences[randomValues][1]\n                    if (targetWidth < 0 || targetWidth >= boardHeight || targetHeight < 0 || targetHeight >= boardHeight) {\n                        randomEntrances[j + i * boardWidth].push([])\n                        randomEntrances[j + i * boardWidth][4 - temp].push(j)\n                        randomEntrances[j + i * boardWidth][4 - temp].push(i)\n                    }\n                    else {\n                        randomEntrances[j + i * boardWidth].push([])\n                        randomEntrances[j + i * boardWidth][4 - temp].push(targetWidth)\n                        randomEntrances[j + i * boardWidth][4 - temp].push(targetHeight)\n                    }\n                    temp--\n                    entranceDifferences.splice(randomValues, 1)\n                }\n            }\n        }\n        this.setState({\n            randomEntrances\n        })\n    }\n\n    countTotalMoves() {\n        this.setState({\n            totalMoves: ++this.state.totalMoves\n        })\n    }\n\n    handleKeyUp(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaHeight\n        } = this.state\n        if (Number(playerPosition.y) % areaHeight - 1 >= 0) this.makeMove(playerPosition.x, playerPosition.y - 1)\n    }\n\n    handleKeyDown(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaHeight\n        } = this.state\n        if (Number(playerPosition.y) % areaHeight + 1 < areaHeight) this.makeMove(playerPosition.x, playerPosition.y + 1)\n    }\n\n    handleKeyRight(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaWidth\n        } = this.state\n        if (Number(playerPosition.x) % areaWidth + 1 < areaWidth) this.makeMove(playerPosition.x + 1, playerPosition.y)\n    }\n\n    handleKeyLeft(e) {\n        e.preventDefault()\n        let {\n            playerPosition,\n            areaWidth\n        } = this.state\n        if (Number(playerPosition.x) % areaWidth - 1 >= 0) this.makeMove(playerPosition.x - 1, playerPosition.y)\n    }\n\n    makeMove(newX, newY) {\n        let {\n            playerPosition,\n            randomEntrances,\n            boardHeight,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            win\n        } = this.state\n        let prevPos = {\n            x: playerPosition.x,\n            y: playerPosition.y\n        }\n        let x = newX % areaWidth\n        let y = newY % areaHeight\n        if ((x === 0 && y === 0) || (x === areaWidth - 1 && y === 0) || (x === areaWidth - 1 && y === areaHeight - 1) || (x === 0 && y === areaHeight - 1)) {\n            let temp\n            if (x === 0 && y === 0) temp = 0\n            else if (x === areaWidth - 1 && y === 0) temp = 1\n            else if (x === areaWidth - 1 && y === areaHeight - 1) temp = 2\n            else temp = 3\n            let ax = Math.floor(newX / areaWidth), ay = Math.floor(newY / areaHeight)\n            let tx = randomEntrances[ax + ay * boardWidth][temp][0] * areaWidth + Math.floor(areaWidth / 2)\n            let ty = randomEntrances[ax + ay * boardWidth][temp][1] * areaHeight + Math.floor(areaHeight / 2)\n            playerPosition[\"x\"] = tx\n            playerPosition[\"y\"] = ty\n            if (Math.floor(tx / areaWidth) === boardWidth - 1 && Math.floor(ty / areaHeight) === boardHeight - 1) win = true\n        }\n        else {\n            playerPosition[\"x\"] = newX\n            playerPosition[\"y\"] = newY\n        }\n        this.setState({\n            playerPosition,\n            prevPlayerPos: prevPos,\n            win\n        })\n        this.countTotalMoves()\n    }\n\n    render() {\n\n        let {\n            playerPosition,\n            randomEntrances,\n            boardWidth,\n            areaWidth,\n            areaHeight,\n            totalMoves,\n            win\n        } = this.state\n\n        let status = '*GM Mode* Coordinates: (' + playerPosition[\"x\"] + ', ' + playerPosition[\"y\"] + ') '\n        let temp = Math.floor(playerPosition[\"x\"] / areaWidth) + Math.floor(playerPosition[\"y\"] / areaHeight) * boardWidth\n        status += 'Entrance: '\n        if (randomEntrances[temp]) {\n            for (let i = 0; i < 4; i++) {\n                status += '(' + randomEntrances[temp][i][0] + ', ' + randomEntrances[temp][i][1] + ') '\n            }\n        }\n        if (win) {\n            win = false\n            alert(\"You win! Total moves: \" + totalMoves)\n        }\n\n        return(<div>\n            <div className = \"status\">\n                {status}\n            </div>\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowUp\"\n                onKeyHandle = {\n                    this.handleKeyUp\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowDown\"\n                onKeyHandle = {\n                    this.handleKeyDown\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowRight\"\n                onKeyHandle = {\n                    this.handleKeyRight\n                }\n            />\n            <KeyHandler\n                keyEventName = {KEYDOWN}\n                keyValue = \"ArrowLeft\"\n                onKeyHandle = {\n                    this.handleKeyLeft\n                }\n            />\n\n            {\n                this.state.showGameBoard &&\n                    ( < GameBoard randomPositions = {\n                            this.state.randomPositions\n                        }\n                        boardWidth = {\n                            this.state.boardWidth\n                        }\n                        boardHeight = {\n                            this.state.boardHeight\n                        }\n                        areaWidth = {\n                            this.state.areaWidth\n                        }\n                        areaHeight = {\n                            this.state.areaHeight\n                        }\n                        playerPosition = {\n                            this.state.playerPosition\n                        }\n                        prevPlayerPos = {\n                            this.state.prevPlayerPos\n                        }\n                        totalMoves = {\n                            this.state.totalMoves\n                        }\n                        />)\n                    } </div>\n            )\n        }\n    }\n\n    export default Game;","import React, { Component } from 'react';\r\n\r\nclass Playerline extends Component{\r\n    render(){\r\n        let str = \"Ready\"\r\n        if (this.props.isready){\r\n            str = \"Cancel\"\r\n        }\r\n        return (<tr>\r\n            <td>\r\n            {this.props.playername}</td>\r\n            <td><button onClick={this.props.handleready}>{str}</button>\r\n            </td>\r\n            </tr>\r\n            )\r\n    }\r\n}\r\n\r\nclass Gameroom extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {room_name: this.props.roomname, player_list: this.props.player_list, player_num: this.props.player_num, ready_num: 0 ,ready_state: Array(4).fill(false)};\r\n        this.addready = this.addready.bind(this)\r\n        this.minusready = this.minusready.bind(this)\r\n    }\r\n\r\n    addready(i){\r\n        let array = this.state.ready_state\r\n        array[i] = true\r\n        let ready_num = this.state.ready_num + 1;\r\n        this.setState({ready_num: ready_num,ready_state:array});\r\n        if (ready_num>=4){\r\n            return;\r\n        }\r\n    }\r\n\r\n    minusready(i){\r\n        let array = this.state.ready_state\r\n        array[i] = false\r\n        let ready_num = this.state.ready_num - 1;\r\n        if (ready_num<0){\r\n            return;\r\n        }\r\n        this.setState({ready_num: ready_num,ready_state:array});\r\n    }\r\n\r\n    render(){\r\n        let list = [0,0,0,0];\r\n        for (let i=0;i<4;i++){\r\n            if (this.state.ready_state[i])\r\n                list[i] = () => this.minusready(i)\r\n            else list[i] = () => this.addready(i)\r\n        }\r\n        return (<div>\r\n            <h1>{this.props.room_name}</h1>\r\n            <table>\r\n                <Playerline isready={this.state.ready_state[0]}\r\n                playername={this.props.player_list[0]} handleready={list[0]} />\r\n            <Playerline isready={this.state.ready_state[1]}\r\n                        playername={this.props.player_list[1]} handleready={list[1]} />\r\n                <Playerline isready={this.state.ready_state[2]}\r\n                        playername={this.props.player_list[2]} handleready={list[2]} />\r\n                <Playerline isready={this.state.ready_state[3]}\r\n                        playername={this.props.player_list[3]} handleready={list[3]} />\r\n            </table>\r\n            <h2>Number of ready: {this.state.ready_num}</h2>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Gameroom;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Game from './Game';\r\nimport GameRoom from './GameRoom';\r\n\r\nfunction Demo({ setMode }) {\r\n\tconst demo = () => {\r\n\t\tsetMode(\"Demo\");\r\n\t}\r\n\treturn <Button size=\"lg\" variant=\"primary\" onClick={demo}>Demo</Button>\r\n}\r\n\r\nfunction CustomRoom({ setMode }) {\r\n\tconst customRoom = () => {\r\n\t\tsetMode(\"CustomRoom\");\r\n\t}\r\n\treturn <Button size=\"lg\" variant=\"primary\" onClick={customRoom}>Custom room</Button>\r\n}\r\n\r\nclass Menu extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmode: \"\",\r\n\t\t}\r\n\t\tthis.setMode=this.setMode.bind(this);\r\n\t}\r\n\t\r\n\tsetMode(i)\t{\r\n\t\tthis.setState({\r\n\t\t\tmode: i,\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className='menu'>\r\n\t\t\t\t<h1>Menu</h1>\r\n\t\t\t\t<Demo setMode={this.setMode}/>\r\n\t\t\t\t<CustomRoom setMode={this.setMode}/>\r\n\t\t\t\t{this.state.mode === \"Demo\"?\r\n\t\t\t\t\t<Game />\r\n\t\t\t\t:\r\n\t\t\t\t\t<></>\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.mode === \"CustomRoom\"?\r\n\t\t\t\t\t<GameRoom room_name={\"Game1\"} player_list={[\"Paul\",\"Alice\",\"Sun\",\"Jason\"]} player_num={4}/>\r\n\t\t\t\t:\r\n\t\t\t\t\t<></>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { TopNavbar } from './Navbar'\nimport ChatRoom from './ChatRoom';\nimport Menu from './Menu';\n\nfunction App() {\n\tconst [userID, setUserID] = React.useState(sessionStorage.getItem('userID'));\n\tconst [username, setUsername] = React.useState(sessionStorage.getItem('username'));\n\treturn (\n\t\t<div>\n\t\t\t<TopNavbar userID={userID} username={username} setUserID={setUserID} setUsername={setUsername}/>\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><ChatRoom /></Col>\n\t\t\t\t\t<Col><Menu /></Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}