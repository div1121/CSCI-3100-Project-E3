{"version":3,"sources":["Login.js","Navbar.js","App.js","index.js"],"names":["app","Realm","id","LoginAsGuest","setUser","loginAsGuest","a","logIn","anonymous","user","alert","onClick","Register","email","password","register","emailPasswordAuth","registerUser","LoginWithEmail","loginWithEmail","emailPassword","LogOut","logout","currentUser","logOut","LoginForm","React","useState","mode","setMode","username","setUsername","setEmail","setPassword","useEffect","className","type","placeholder","value","onChange","e","target","oldMode","Navbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8430789b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst REALM_APP_ID = \"application-0-exwhb\";\r\nconst app = new Realm.App({ id: REALM_APP_ID });\r\n\r\nfunction LoginAsGuest({ setUser }) {\r\n\tconst loginAsGuest = async () => {\r\n\t\ttry {\r\n\t\t\tconst user = await app.logIn(Realm.Credentials.anonymous());\r\n\t\t\tsetUser(user);\r\n\t\t} catch (error) {\r\n\t\t\talert(\"Failed to connect\");\r\n\t\t}\r\n\t};\r\n\treturn <a onClick={loginAsGuest}>login as guest</a>;\r\n}\r\n\r\nfunction Register({ email, password}) {\r\n\tconst register = async () => {\r\n\t\ttry {\r\n\t\t\tawait app.emailPasswordAuth.registerUser(email, password);\r\n\t\t\talert(\"A confirmation mail has been sent to the mailbox.\")\r\n\t\t} catch (error) {\r\n\t\t\talert(\"Invalid email or password\");\r\n\t\t}\r\n\t};\r\n\treturn <button onClick={register}>Register</button>;\r\n}\r\n\r\nfunction LoginWithEmail({ setUser, email, password}) {\r\n\tconst loginWithEmail = async () => {\r\n\t\ttry {\r\n\t\t\tconst user = await app.logIn(Realm.Credentials.emailPassword(email, password));\r\n\t\t\tsetUser(user);\r\n\t\t} catch (error) {\r\n\t\t\talert(\"Invalid email or password\");\r\n\t\t}\r\n\t};\r\n\treturn <button onClick={loginWithEmail}>Login</button>;\r\n}\r\n\r\nfunction LogOut({ setUser }) {\r\n\tconst logout = async () => {\r\n\t\ttry {\r\n\t\t\tawait app.currentUser.logOut();\r\n\t\t\tsetUser(null);\r\n\t\t} catch (error) {\r\n\t\t\talert(\"Failed to connect\");\r\n\t\t}\r\n\t};\r\n\treturn <button onClick={logout}>Log out</button>;\r\n}\r\n\r\nfunction LoginForm({ setUser }) {\r\n\tconst [mode, setMode]  = React.useState(\"signIn\");\r\n\tconst toggleMode = () => {\r\n\t\tsetMode((oldMode) => (oldMode === \"signIn\" ? \"signUp\" : \"signIn\"));\r\n\t};\r\n\t\r\n\tconst [username, setUsername] = React.useState(\"\");\r\n\tconst [email, setEmail] = React.useState(\"\");\r\n\tconst [password, setPassword] = React.useState(\"\");\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tsetUsername(\"\");\r\n\t\tsetEmail(\"\");\r\n\t\tsetPassword(\"\");\r\n\t}, [mode]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t{mode === \"signIn\" ? (\r\n\t\t\t<div className=\"login_form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype = \"email\"\r\n\t\t\t\t\tplaceholder = \"email\"\r\n\t\t\t\t\tvalue = {email}\r\n\t\t\t\t\tonChange = {(e) => setEmail(e.target.value)}\r\n\t\t\t\t\tclassName=\"form_input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype = \"password\"\r\n\t\t\t\t\tplaceholder = \"password\"\r\n\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\t\tclassName=\"form_input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<LoginWithEmail setUser={setUser} email={email} password={password}/>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div className=\"login_form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype = \"username\"\r\n\t\t\t\t\tplaceholder = \"username\"\r\n\t\t\t\t\tvalue = {username}\r\n\t\t\t\t\tonChange = {(e) => setUsername(e.target.value)}\r\n\t\t\t\t\tclassName=\"form_input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype = \"email\"\r\n\t\t\t\t\tplaceholder = \"email\"\r\n\t\t\t\t\tvalue = {email}\r\n\t\t\t\t\tonChange = {(e) => setEmail(e.target.value)}\r\n\t\t\t\t\tclassName=\"form_input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype = \"password\"\r\n\t\t\t\t\tplaceholder = \"password\"\r\n\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\t\tclassName=\"form_input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Register email={email} password={password}/>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<span>You may also </span>\r\n\t\t\t\t<a onClick={() => {toggleMode();}}>\r\n\t\t\t\t\t{mode === \"signIn\" ? \"register a new account\" : \"go to login\"}\r\n\t\t\t\t</a>\r\n\t\t\t\t<span> or </span>\r\n\t\t\t\t<LoginAsGuest setUser={setUser}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport {LoginAsGuest, Register, LoginWithEmail, LogOut, LoginForm};","import {LoginAsGuest, Register, LoginWithEmail, LogOut, LoginForm} from \"./Login\"\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction Navbar({ user, setUser }){\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div  className=\"Navbar\">\r\n\t\t\t\t<div className=\"App_header\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tMagic Maze\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tA game created by CSCI3100 Project Group E3\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"User_header\">\r\n\t\t\t\t{user ?\r\n\t\t\t\t\t<div>\t\r\n\t\t\t\t\t\t<h2>Your id: {user.id}</h2>\r\n\t\t\t\t\t\t<LogOut setUser={setUser} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t\t<LoginForm setUser={setUser} />\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport {Navbar};","import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport {Navbar} from \"./Navbar\"\nimport \"./App.css\";\n\nconst REALM_APP_ID = \"application-0-exwhb\";\nconst app = new Realm.App({ id: REALM_APP_ID });\n\nfunction App() {\n\tconst [user, setUser] = React.useState(app.currentUser);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar user={user} setUser={setUser}/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}